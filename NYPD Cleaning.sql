----June 9, 2022
--- Viewing the dataset 
SELECT TOP 150
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- In order to clean the data, I want to take account of all EMPTY cells.

SELECT
	SUM(CASE WHEN CMPLNT_NUM = ' ' THEN 1 ELSE 0 END) CMPLNT_NUM, 
	SUM(CASE WHEN CMPLNT_FR_DT = ' ' THEN 1 ELSE 0 END) CMPLNT_FR_DT,
	SUM(CASE WHEN CMPLNT_FR_TM = ' ' THEN 1 ELSE 0 END) CMPLNT_FR_TM,
	SUM(CASE WHEN CMPLNT_TO_DT = ' ' THEN 1 ELSE 0 END) CMPLNT_TO_DT,
	SUM(CASE WHEN CMPLNT_TO_TM = ' ' THEN 1 ELSE 0 END) CMPLNT_TO_TM,
	SUM(CASE WHEN ADDR_PCT_CD = ' ' THEN 1 ELSE 0 END) ADDR_PCT_CD,
	SUM(CASE WHEN RPT_DT = ' ' THEN 1 ELSE 0 END) RPT_DT,
	SUM(CASE WHEN KY_CD = ' ' THEN 1 ELSE 0 END) KY_CD,
	SUM(CASE WHEN OFNS_DESC = ' ' THEN 1 ELSE 0 END) OFNS_DESC,
	SUM(CASE WHEN PD_CD = ' ' THEN 1 ELSE 0 END) PD_CD,
	SUM(CASE WHEN PD_DESC = ' ' THEN 1 ELSE 0 END) PD_DESC,
	SUM(CASE WHEN CRM_ATPT_CPTD_CD = ' ' THEN 1 ELSE 0 END) CRM_ATPT_CPTD_CD,
	SUM(CASE WHEN LAW_CAT_CD = ' ' THEN 1 ELSE 0 END) LAW_CAT_CD,
	SUM(CASE WHEN BORO_NM = ' ' THEN 1 ELSE 0 END) BORO_NM,
	SUM(CASE WHEN LOC_OF_OCCUR_DESC = ' ' THEN 1 ELSE 0 END) LOC_OF_OCCUR_DESC,
	SUM(CASE WHEN PREM_TYP_DESC = ' ' THEN 1 ELSE 0 END) PREM_TYP_DESC,
	SUM(CASE WHEN JURIS_DESC = ' ' THEN 1 ELSE 0 END) JURIS_DESC,
	SUM(CASE WHEN JURISDICTION_CODE = ' ' THEN 1 ELSE 0 END) JURISDICTION_CODE,
	SUM(CASE WHEN PARKS_NM = ' ' THEN 1 ELSE 0 END) PARKS_NM,
	SUM(CASE WHEN HADEVELOPT = ' ' THEN 1 ELSE 0 END) HADEVELOPT,
	SUM(CASE WHEN HOUSING_PSA = ' ' THEN 1 ELSE 0 END) HOUSING_PSA,
	SUM(CASE WHEN X_COORD_CD = ' ' THEN 1 ELSE 0 END) X_COORD_CD,
	SUM(CASE WHEN Y_COORD_CD = ' ' THEN 1 ELSE 0 END) Y_COORD_CD,
	SUM(CASE WHEN SUSP_AGE_GROUP = ' ' THEN 1 ELSE 0 END) SUSP_AGE_GROUP,
	SUM(CASE WHEN SUSP_RACE = ' ' THEN 1 ELSE 0 END) SUSP_RACE,
	SUM(CASE WHEN SUSP_SEX = ' ' THEN 1 ELSE 0 END) SUSP_SEX,
	SUM(CASE WHEN TRANSIT_DISTRICT = ' ' THEN 1 ELSE 0 END) TRANSIT_DISTRICT,
	SUM(CASE WHEN Latitude = ' ' THEN 1 ELSE 0 END) Latitude,
	SUM(CASE WHEN Longitude = ' ' THEN 1 ELSE 0 END) Longitude,
	SUM(CASE WHEN Lat_Lon = ' ' THEN 1 ELSE 0 END) Lat_Lon,
	SUM(CASE WHEN PATROL_BORO = ' ' THEN 1 ELSE 0 END) PATROL_BORO,
	SUM(CASE WHEN STATION_NAME = ' ' THEN 1 ELSE 0 END) STATION_NAME,
	SUM(CASE WHEN VIC_AGE_GROUP = ' ' THEN 1 ELSE 0 END) VIC_AGE_GROUP,
	SUM(CASE WHEN VIC_RACE = ' ' THEN 1 ELSE 0 END) VIC_RACE,
	SUM(CASE WHEN VIC_SEX = ' ' THEN 1 ELSE 0 END) VIC_SEX
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- In order to clean the data, I want to take account of all NULL cells.

SELECT
	SUM(CASE WHEN CMPLNT_NUM IS NULL THEN 1 ELSE 0 END) CMPLNT_NUM,
	SUM(CASE WHEN CMPLNT_FR_DT IS NULL THEN 1 ELSE 0 END) CMPLNT_FR_DT,
	SUM(CASE WHEN CMPLNT_FR_TM IS NULL THEN 1 ELSE 0 END) CMPLNT_FR_TM,
	SUM(CASE WHEN CMPLNT_TO_DT IS NULL THEN 1 ELSE 0 END) CMPLNT_TO_DT,
	SUM(CASE WHEN CMPLNT_TO_TM IS NULL THEN 1 ELSE 0 END) CMPLNT_TO_TM,
	SUM(CASE WHEN ADDR_PCT_CD IS NULL THEN 1 ELSE 0 END) ADDR_PCT_CD,
	SUM(CASE WHEN RPT_DT IS NULL THEN 1 ELSE 0 END) RPT_DT,
	SUM(CASE WHEN KY_CD IS NULL THEN 1 ELSE 0 END) KY_CD,
	SUM(CASE WHEN OFNS_DESC IS NULL THEN 1 ELSE 0 END) OFNS_DESC,
	SUM(CASE WHEN PD_CD IS NULL THEN 1 ELSE 0 END) PD_CD,
	SUM(CASE WHEN PD_DESC IS NULL THEN 1 ELSE 0 END) PD_DESC,
	SUM(CASE WHEN CRM_ATPT_CPTD_CD IS NULL THEN 1 ELSE 0 END) CRM_ATPT_CPTD_CD,
	SUM(CASE WHEN LAW_CAT_CD IS NULL THEN 1 ELSE 0 END) LAW_CAT_CD,
	SUM(CASE WHEN BORO_NM IS NULL THEN 1 ELSE 0 END) BORO_NM,
	SUM(CASE WHEN LOC_OF_OCCUR_DESC IS NULL THEN 1 ELSE 0 END) LOC_OF_OCCUR_DESC,
	SUM(CASE WHEN PREM_TYP_DESC IS NULL THEN 1 ELSE 0 END) PREM_TYP_DESC,
	SUM(CASE WHEN JURIS_DESC IS NULL THEN 1 ELSE 0 END) JURIS_DESC,
	SUM(CASE WHEN JURISDICTION_CODE IS NULL THEN 1 ELSE 0 END) JURISDICTION_CODE,
	SUM(CASE WHEN PARKS_NM IS NULL THEN 1 ELSE 0 END) PARKS_NM,
	SUM(CASE WHEN HADEVELOPT IS NULL THEN 1 ELSE 0 END) HADEVELOPT,
	SUM(CASE WHEN HOUSING_PSA IS NULL THEN 1 ELSE 0 END) HOUSING_PSA,
	SUM(CASE WHEN X_COORD_CD IS NULL THEN 1 ELSE 0 END) X_COORD_CD,
	SUM(CASE WHEN Y_COORD_CD IS NULL THEN 1 ELSE 0 END) Y_COORD_CD,
	SUM(CASE WHEN SUSP_AGE_GROUP IS NULL THEN 1 ELSE 0 END) SUSP_AGE_GROUP,
	SUM(CASE WHEN SUSP_RACE IS NULL THEN 1 ELSE 0 END) SUSP_RACE,
	SUM(CASE WHEN SUSP_SEX IS NULL THEN 1 ELSE 0 END) SUSP_SEX,
	SUM(CASE WHEN TRANSIT_DISTRICT IS NULL THEN 1 ELSE 0 END) TRANSIT_DISTRICT,
	SUM(CASE WHEN Latitude IS NULL THEN 1 ELSE 0 END) Latitude,
	SUM(CASE WHEN Longitude IS NULL THEN 1 ELSE 0 END) Longitude,
	SUM(CASE WHEN Lat_Lon IS NULL THEN 1 ELSE 0 END) Lat_Lon,
	SUM(CASE WHEN PATROL_BORO IS NULL THEN 1 ELSE 0 END) PATROL_BORO,
	SUM(CASE WHEN STATION_NAME IS NULL THEN 1 ELSE 0 END) STATION_NAME,
	SUM(CASE WHEN VIC_AGE_GROUP IS NULL THEN 1 ELSE 0 END) VIC_AGE_GROUP,
	SUM(CASE WHEN VIC_RACE IS NULL THEN 1 ELSE 0 END) VIC_RACE,
	SUM(CASE WHEN VIC_SEX IS NULL THEN 1 ELSE 0 END) VIC_SEX
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;
-- There are no NULL cells accross the dataset.

--- According to the footnotes, CMPLNT_FR_DT represents "Exact date of occurrence for the reported event". Therefore, the column has a year limit of 2019. To check for any inconsistencies with the data in CMPLNT_FR_DT.
--- Empty cells are present in CMPLNT_FR_DT. To scan such records:

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	CMPLNT_FR_DT = ' ';

-- According to footnotes and meta-data, null values and empty cells will be NULL

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	CMPLNT_FR_DT = NULL
WHERE
	CMPLNT_FR_DT = ' ';

--- For confirmation:

SELECT
	SUM(CASE WHEN CMPLNT_FR_DT = ' ' THEN 1 ELSE 0 END) CMPLNT_FR_DT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- 

--- Empty cells are present in CMPLNT_FR_TM. To scan such records:

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	CMPLNT_FR_TM = ' ';

-- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	CMPLNT_FR_TM = NULL
WHERE
	CMPLNT_FR_TM = ' ';

--- For confirmation:

SELECT
	SUM(CASE WHEN CMPLNT_FR_TM = ' ' THEN 1 ELSE 0 END) CMPLNT_FR_TM
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- According to the footnotes, CMPLNT_TO_DT represents "Ending date of occurrence for the reported event".

SELECT
	DATEPART(YYYY, [CMPLNT_TO_DT]) AS YYYY,
	COUNT(*) AS FREQUENCY
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
GROUP BY
	DATEPART(YYYY, [CMPLNT_TO_DT])
ORDER BY
	YYYY DESC,
	FREQUENCY DESC;

---The data in some cells seems to have been inputed incorrectly. With the obvious nature of such mistakes, I will rectify them.

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	CMPLNT_TO_DT = DATEADD(YYYY, -81, CMPLNT_TO_DT)
WHERE
	DATEPART(YYYY, [CMPLNT_TO_DT]) = 2090;

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	CMPLNT_TO_DT = DATEADD(YYYY, -63, CMPLNT_TO_DT)
WHERE
	DATEPART(YYYY, [CMPLNT_TO_DT]) = 2081;

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	CMPLNT_TO_DT = DATEADD(YYYY, 1000, CMPLNT_TO_DT)
WHERE
	DATEPART(YYYY, [CMPLNT_TO_DT]) = 1010;

SELECT 
	CAST([CMPLNT_TO_DT] AS date)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	DATEPART(YYYY, [CMPLNT_TO_DT]) = 1010;

SELECT 
	CONVERT(DATE, [CMPLNT_TO_DT], 101)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	DATEPART(YYYY, [CMPLNT_TO_DT]) = 1010;

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	DATEPART(YYYY, [CMPLNT_TO_DT]) = 1010;

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	CMPLNT_TO_DT = DATEADD(YYYY, 1000, CMPLNT_TO_DT)
WHERE
	DATEPART(YYYY, [CMPLNT_TO_DT]) = 1017;

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	DATEPART(YEAR, [CMPLNT_TO_DT]) = 1017;

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	CMPLNT_TO_DT = DATEADD(YYYY, 1000, CMPLNT_TO_DT)
WHERE
	DATEPART(YYYY, [CMPLNT_TO_DT]) = 1018;

--- Empty cells are present in CMPLNT_TO_DT. To scan such records:

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	CMPLNT_TO_DT = ' ';

-- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	CMPLNT_TO_DT = NULL
WHERE
	CMPLNT_TO_DT = ' ';

--- For confirmation:

SELECT
	SUM(CASE WHEN CMPLNT_TO_DT = ' ' THEN 1 ELSE 0 END) CMPLNT_TO_DT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Empty cells are present in CMPLNT_TO_TM. To scan such records:

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	CMPLNT_TO_TM = ' ';

-- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	CMPLNT_TO_TM = NULL
WHERE
	CMPLNT_TO_TM = ' ';

--- For confirmation:

SELECT
	SUM(CASE WHEN CMPLNT_TO_TM = ' ' THEN 1 ELSE 0 END) CMPLNT_TO_TM
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Viewing the dataset 

SELECT 
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Checking for empty cells in ADDR_PCT_CD

SELECT
	SUM(CASE WHEN ADDR_PCT_CD = ' ' THEN 1 ELSE 0 END) ADDR_PCT_CD
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Empty cells are present in ADDR_PCT_CD. To scan such records:

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	ADDR_PCT_CD = ' ';

-- Upon scanning, no pattern was disertained so I will update such empty cells as NULL.

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	ADDR_PCT_CD = NULL
WHERE
	ADDR_PCT_CD = ' ';

--- For confirmation:

SELECT
	SUM(CASE WHEN ADDR_PCT_CD = ' ' THEN 1 ELSE 0 END) ADDR_PCT_CD
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Checking for empty cells in RPT_DT

SELECT
	SUM(CASE WHEN RPT_DT = ' ' THEN 1 ELSE 0 END) RPT_DT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- There are no empty cells in RPT_DT. I would like to know the earliest and latest records in RPT_DT.
 
SELECT
	MIN(DATEPART(YYYY, [RPT_DT])) AS EARLIEST,
	MAX(DATEPART(YYYY, [RPT_DT])) AS LATEST
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;
-- Begins 2006, Ends 2021.

--- Checking for empty cells in KY_CD

SELECT
	SUM(CASE WHEN KY_CD = ' ' THEN 1 ELSE 0 END) KY_CD
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Checking for the prescence of a non-numeric character in the column

SELECT
	KY_CD
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	ISNUMERIC(KY_CD) = 0;
-- There is none.

---According to the meta_data, KY_CD is the representative key for each OFNS_DESC. Using that knowledge, update the empty attributes of OFNS_DESC

SELECT
	DISTINCT(KY_CD), OFNS_DESC
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	OFNS_DESC != ' '
ORDER BY
	KY_CD;

--- Using an INNER JOIN statement to match the KY_CD to OFNS_DESC.

SELECT
	A.KY_CD,
	A.OFNS_DESC AS BEFORE,
	B.OFNS_DESC AS AFTER
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic AS A
INNER JOIN PortfolioProject..NYPD_Complaint_Data_Historic AS B
	ON A.KY_CD = B.KY_CD
WHERE 
	A.OFNS_DESC = ' ';

--- Updating:

UPDATE
	A
SET
	A.OFNS_DESC = B.OFNS_DESC
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic AS A
	INNER JOIN PortfolioProject..NYPD_Complaint_Data_Historic AS B
	ON A.KY_CD = B.KY_CD
WHERE 
	A.OFNS_DESC = ' '; 

--- Checking for empty cells in OFNS_DESC

SELECT
	SUM(CASE WHEN OFNS_DESC = ' ' THEN 1 ELSE 0 END) OFNS_DESC
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

---There are still some empty cells. To check:

SELECT
	DISTINCT(KY_CD), OFNS_DESC
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	OFNS_DESC = ' '
ORDER BY
	KY_CD;
-- Only KY_CD '360' lacks an OFNS_DESC.

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	KY_CD = 360;
-- Upon viewing, it seems it waas intentionally left empty. Therefore, it will be updated as NULL.

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	OFNS_DESC = NULL
WHERE 
	KY_CD = 360; 

--- Final check for empty cells in OFNS_DESC

SELECT
	SUM(CASE WHEN OFNS_DESC = ' ' THEN 1 ELSE 0 END) OFNS_DESC
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Upon scanning earlier, I made note to recognize the prescence of attrubutes in quotes(") which isn't recognized and is inconsistent in OFNS_DESC

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	OFNS_DESC LIKE '%"%';

SELECT
	DISTINCT(OFNS_DESC)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	OFNS_DESC LIKE '%"%';
-- The original contents of OFNS_DESC that contain quotations has been stretched into PD_CD therefore distorting the attributes of remaining colums.
--- To update, CONCAT and TRIM will be applied.

SELECT
	TRIM('"' FROM (CONCAT([OFNS_DESC], ', ', [PD_CD]))) AS TEST
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	OFNS_DESC LIKE '"%' AND PD_CD LIKE '%"';

-- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	OFNS_DESC = TRIM('"' FROM (CONCAT([OFNS_DESC], ', ', [PD_CD])))
WHERE 
	OFNS_DESC LIKE '"%' AND PD_CD LIKE '%"';

--- As OFNS_DESC has been updated, I will update the affected cells as the contents of next column(PD_CD) are in (PD_DESC)

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	ISNUMERIC(PD_CD) = 0 AND PD_CD IS NOT NULL;

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	PD_CD = [PD_DESC]
WHERE 
	ISNUMERIC(PD_CD) = 0 AND PD_CD IS NOT NULL;

--- Scanning to confirm consistencty and integrity:

SELECT
	DISTINCT(OFNS_DESC)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Checking for empty cells in PD_CD

SELECT
	SUM(CASE WHEN PD_CD = ' ' THEN 1 ELSE 0 END) PD_CD
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;
-- There are empty cells
--- To scan:
SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	PD_CD = ' ';
-- It seems to be intentional in respect to OFNS_DESC being 'MURDER & NON-NEGL. MANSLAUGHTER' which also applies to the corresponding attributes in PD_DESC. To confirm:
SELECT
	COUNT(*) AS FREQ
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	PD_CD = ' ' AND OFNS_DESC = 'MURDER & NON-NEGL. MANSLAUGHTER';

SELECT
	COUNT(*) AS FREQ
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	PD_DESC = ' ' AND OFNS_DESC = 'MURDER & NON-NEGL. MANSLAUGHTER';
-- My hypothesis was correct. I will update such cells as NULL.

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	PD_CD = NULL
WHERE
	PD_CD = ' ' AND OFNS_DESC = 'MURDER & NON-NEGL. MANSLAUGHTER';

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	PD_DESC = NULL
WHERE
	PD_DESC = ' ' AND OFNS_DESC = 'MURDER & NON-NEGL. MANSLAUGHTER';

--- Checking for empty cells in PD_DESC

SELECT
	SUM(CASE WHEN PD_DESC = ' ' THEN 1 ELSE 0 END) PD_DESC
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

---According to the meta_data, PD_CD is the representative key for each PD_DESC. Using that knowledge, update the empty attributes of PD_DESC

SELECT
	DISTINCT(PD_CD), PD_DESC
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	ISNUMERIC(PD_CD) = 1
ORDER BY
	PD_CD;

--- To scan PD_DESC which contained integers should be noted

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	ISNUMERIC(PD_DESC) = 1;

--- There are multiple cells with quotations(")(as described earlier) and some with integers (as a result of the rectifications to PD_CD). I will sort them with CASE statement.

SELECT
	DISTINCT(PD_CD), 
	PD_DESC,
	CASE
	WHEN PD_DESC NOT LIKE '%"%' AND NOT ISNUMERIC(PD_DESC) = 1 THEN PD_DESC
	WHEN ISNUMERIC(PD_DESC) = 1 AND BORO_NM LIKE '%"' THEN TRIM('"' FROM (CONCAT([CRM_ATPT_CPTD_CD], ', ', [LAW_CAT_CD], ', ', [BORO_NM])))
	WHEN PD_DESC LIKE '"%' AND CRM_ATPT_CPTD_CD LIKE '%"' THEN TRIM('"' FROM (CONCAT([PD_DESC], ', ', [CRM_ATPT_CPTD_CD])))
	WHEN PD_DESC LIKE '"%' AND LAW_CAT_CD LIKE '%"' THEN TRIM('"' FROM (CONCAT([PD_DESC], ', ', [CRM_ATPT_CPTD_CD], ', ', [LAW_CAT_CD])))
	WHEN PD_DESC LIKE '"%' AND BORO_NM LIKE '%"' THEN TRIM('"' FROM (CONCAT([PD_DESC], ', ', [CRM_ATPT_CPTD_CD], ', ', [LAW_CAT_CD], ', ', [BORO_NM])))
	WHEN PD_DESC = ' ' THEN NULL
	ELSE PD_DESC END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
ORDER BY
	PD_CD;

-- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	PD_DESC = 
			CASE
			WHEN PD_DESC NOT LIKE '%"%' AND NOT ISNUMERIC(PD_DESC) = 1 THEN PD_DESC
			WHEN ISNUMERIC(PD_DESC) = 1 AND BORO_NM LIKE '%"' THEN TRIM('"' FROM (CONCAT([CRM_ATPT_CPTD_CD], ', ', [LAW_CAT_CD], ', ', [BORO_NM])))
			WHEN PD_DESC LIKE '"%' AND CRM_ATPT_CPTD_CD LIKE '%"' THEN TRIM('"' FROM (CONCAT([PD_DESC], ', ', [CRM_ATPT_CPTD_CD])))
			WHEN PD_DESC LIKE '"%' AND LAW_CAT_CD LIKE '%"' THEN TRIM('"' FROM (CONCAT([PD_DESC], ', ', [CRM_ATPT_CPTD_CD], ', ', [LAW_CAT_CD])))
			WHEN PD_DESC LIKE '"%' AND BORO_NM LIKE '%"' THEN TRIM('"' FROM (CONCAT([PD_DESC], ', ', [CRM_ATPT_CPTD_CD], ', ', [LAW_CAT_CD], ', ', [BORO_NM])))
			WHEN PD_DESC = ' ' THEN NULL
			ELSE PD_DESC END;

--- For confirmation:

SELECT
	DISTINCT(PD_CD), PD_DESC
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
ORDER BY
	PD_CD;

--- CRM_ATPT_CTPD_CD has only two possible attributes but I intend to use the quotations(") and similarity in those previously adjusted cells in PD_DESC to extract the original attributes

SELECT
	CRM_ATPT_CPTD_CD,
	CASE
	WHEN CRM_ATPT_CPTD_CD LIKE '%"' THEN [LAW_CAT_CD]
	WHEN LAW_CAT_CD LIKE '%"' THEN [BORO_NM]
	WHEN BORO_NM LIKE '%"' THEN [LOC_OF_OCCUR_DESC]
	ELSE CRM_ATPT_CPTD_CD END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For confirmation before updating

SELECT
	DISTINCT(
	CASE
	WHEN CRM_ATPT_CPTD_CD LIKE '%"' THEN [LAW_CAT_CD]
	WHEN LAW_CAT_CD LIKE '%"' THEN [BORO_NM]
	WHEN BORO_NM LIKE '%"' THEN [LOC_OF_OCCUR_DESC]
	ELSE CRM_ATPT_CPTD_CD END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	CRM_ATPT_CPTD_CD = 
					CASE
					WHEN CRM_ATPT_CPTD_CD LIKE '%"' THEN [LAW_CAT_CD]
					WHEN LAW_CAT_CD LIKE '%"' THEN [BORO_NM]
					WHEN BORO_NM LIKE '%"' THEN [LOC_OF_OCCUR_DESC]
					ELSE CRM_ATPT_CPTD_CD END;
					
--- I did not address the empty cells to null. Updating;

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	CRM_ATPT_CPTD_CD = NULL
WHERE
	CRM_ATPT_CPTD_CD = ' ';

--- Using a CASE statement, I will extract the original attributes based on patterns observed

SELECT
	LAW_CAT_CD,
	CASE
	WHEN LAW_CAT_CD = CRM_ATPT_CPTD_CD THEN BORO_NM
	WHEN LAW_CAT_CD LIKE '%"' THEN LOC_OF_OCCUR_DESC
	WHEN BORO_NM LIKE '%"' THEN PREM_TYP_DESC
	ELSE LAW_CAT_CD END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For Distinct:

SELECT
	DISTINCT(
	CASE
	WHEN LAW_CAT_CD = CRM_ATPT_CPTD_CD THEN BORO_NM
	WHEN LAW_CAT_CD LIKE '%"' THEN LOC_OF_OCCUR_DESC
	WHEN BORO_NM LIKE '%"' THEN PREM_TYP_DESC
	ELSE LAW_CAT_CD END) AS ORIGINAL
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--There are empty cells. To scan:

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	LAW_CAT_CD = ' ';

--- As observed, empty cells in LAW_CAT_CD represnt the now NULL cells in CRM_ATPT_CTPD_CD. Therefore, the attributes of those empty cells are in BORO_NM.
SELECT
	LAW_CAT_CD,
	CASE
	WHEN LAW_CAT_CD = CRM_ATPT_CPTD_CD THEN BORO_NM
	WHEN LAW_CAT_CD LIKE '%"' THEN LOC_OF_OCCUR_DESC
	WHEN BORO_NM LIKE '%"' THEN PREM_TYP_DESC
	WHEN LAW_CAT_CD = ' ' AND CRM_ATPT_CPTD_CD IS NULL THEN NULL
	ELSE LAW_CAT_CD END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For Distinct:

SELECT
	DISTINCT(
	CASE
	WHEN LAW_CAT_CD = CRM_ATPT_CPTD_CD THEN BORO_NM
	WHEN LAW_CAT_CD LIKE '%"' THEN LOC_OF_OCCUR_DESC
	WHEN BORO_NM LIKE '%"' THEN PREM_TYP_DESC
	WHEN LAW_CAT_CD = ' ' AND CRM_ATPT_CPTD_CD IS NULL THEN NULL
	ELSE LAW_CAT_CD END) AS ORIGINAL
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

---All cells are categorized. Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	LAW_CAT_CD = 
				CASE
				WHEN LAW_CAT_CD = CRM_ATPT_CPTD_CD THEN BORO_NM
				WHEN LAW_CAT_CD LIKE '%"' THEN LOC_OF_OCCUR_DESC
				WHEN BORO_NM LIKE '%"' THEN PREM_TYP_DESC
				WHEN LAW_CAT_CD = ' ' AND CRM_ATPT_CPTD_CD IS NULL THEN NULL
				ELSE LAW_CAT_CD END;

--- To check:

SELECT
	DISTINCT(LAW_CAT_CD)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Using a CASE statement, I will extract the original attributes based on patterns observed for BORO_NM

SELECT
	BORO_NM,
	CASE
	WHEN BORO_NM = LAW_CAT_CD AND LOC_OF_OCCUR_DESC != ' ' THEN LOC_OF_OCCUR_DESC
	WHEN BORO_NM = LAW_CAT_CD AND LOC_OF_OCCUR_DESC = ' ' THEN NULL
	WHEN BORO_NM = CRM_ATPT_CPTD_CD AND LAW_CAT_CD = LOC_OF_OCCUR_DESC AND PREM_TYP_DESC = ' ' THEN NULL
	WHEN BORO_NM = CRM_ATPT_CPTD_CD AND LAW_CAT_CD = LOC_OF_OCCUR_DESC AND PREM_TYP_DESC != ' ' THEN PREM_TYP_DESC
	WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD AND BORO_NM = PREM_TYP_DESC AND BORO_NM = ' ' THEN NULL
	WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD AND BORO_NM = PREM_TYP_DESC AND BORO_NM != ' ' THEN PREM_TYP_DESC
	WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD AND PREM_TYP_DESC = ' ' THEN NULL
	WHEN LOC_OF_OCCUR_DESC = CRM_ATPT_CPTD_CD AND PREM_TYP_DESC != ' ' THEN JURIS_DESC
	WHEN LOC_OF_OCCUR_DESC = CRM_ATPT_CPTD_CD AND JURIS_DESC = ' ' THEN NULL	
	WHEN PREM_TYP_DESC = LAW_CAT_CD AND JURIS_DESC != ' ' THEN JURIS_DESC
	WHEN PREM_TYP_DESC = LAW_CAT_CD AND JURIS_DESC = ' ' THEN NULL
	WHEN BORO_NM = ' ' AND LOC_OF_OCCUR_DESC = LAW_CAT_CD AND PREM_TYP_DESC = ' ' THEN NULL
	WHEN BORO_NM = ' ' AND LOC_OF_OCCUR_DESC != LAW_CAT_CD AND PREM_TYP_DESC != ' ' THEN NULL
	WHEN BORO_NM = ' ' AND LOC_OF_OCCUR_DESC = LAW_CAT_CD AND PREM_TYP_DESC != ' ' THEN PREM_TYP_DESC
	WHEN BORO_NM = ' ' AND PREM_TYP_DESC = ' ' THEN NULL
	ELSE BORO_NM END AS CORRECT

FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For Distinct attributes:

SELECT
	DISTINCT(
	CASE
	WHEN BORO_NM = LAW_CAT_CD AND LOC_OF_OCCUR_DESC != ' ' THEN LOC_OF_OCCUR_DESC
	WHEN BORO_NM = LAW_CAT_CD AND LOC_OF_OCCUR_DESC = ' ' THEN NULL
	WHEN BORO_NM = CRM_ATPT_CPTD_CD AND LAW_CAT_CD = LOC_OF_OCCUR_DESC AND PREM_TYP_DESC = ' ' THEN NULL
	WHEN BORO_NM = CRM_ATPT_CPTD_CD AND LAW_CAT_CD = LOC_OF_OCCUR_DESC AND PREM_TYP_DESC != ' ' THEN PREM_TYP_DESC
	WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD AND BORO_NM = PREM_TYP_DESC AND BORO_NM = ' ' THEN NULL
	WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD AND BORO_NM = PREM_TYP_DESC AND BORO_NM != ' ' THEN PREM_TYP_DESC
	WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD AND PREM_TYP_DESC = ' ' THEN NULL
	WHEN LOC_OF_OCCUR_DESC = CRM_ATPT_CPTD_CD AND PREM_TYP_DESC != ' ' THEN JURIS_DESC
	WHEN LOC_OF_OCCUR_DESC = CRM_ATPT_CPTD_CD AND JURIS_DESC = ' ' THEN NULL	
	WHEN PREM_TYP_DESC = LAW_CAT_CD AND JURIS_DESC != ' ' THEN JURIS_DESC
	WHEN PREM_TYP_DESC = LAW_CAT_CD AND JURIS_DESC = ' ' THEN NULL
	WHEN BORO_NM = ' ' AND LOC_OF_OCCUR_DESC = LAW_CAT_CD AND PREM_TYP_DESC = ' ' THEN NULL
	WHEN BORO_NM = ' ' AND LOC_OF_OCCUR_DESC != LAW_CAT_CD AND PREM_TYP_DESC != ' ' THEN NULL
	WHEN BORO_NM = ' ' AND LOC_OF_OCCUR_DESC = LAW_CAT_CD AND PREM_TYP_DESC != ' ' THEN PREM_TYP_DESC
	WHEN BORO_NM = ' ' AND PREM_TYP_DESC = ' ' THEN NULL
	ELSE BORO_NM END) AS CORRECT

FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	BORO_NM = 
		CASE
		WHEN BORO_NM = LAW_CAT_CD AND LOC_OF_OCCUR_DESC != ' ' THEN LOC_OF_OCCUR_DESC
		WHEN BORO_NM = LAW_CAT_CD AND LOC_OF_OCCUR_DESC = ' ' THEN NULL
		WHEN BORO_NM = CRM_ATPT_CPTD_CD AND LAW_CAT_CD = LOC_OF_OCCUR_DESC AND PREM_TYP_DESC = ' ' THEN NULL
		WHEN BORO_NM = CRM_ATPT_CPTD_CD AND LAW_CAT_CD = LOC_OF_OCCUR_DESC AND PREM_TYP_DESC != ' ' THEN PREM_TYP_DESC
		WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD AND BORO_NM = PREM_TYP_DESC AND BORO_NM = ' ' THEN NULL
		WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD AND BORO_NM = PREM_TYP_DESC AND BORO_NM != ' ' THEN PREM_TYP_DESC
		WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD AND PREM_TYP_DESC = ' ' THEN NULL
		WHEN LOC_OF_OCCUR_DESC = CRM_ATPT_CPTD_CD AND PREM_TYP_DESC != ' ' THEN JURIS_DESC
		WHEN LOC_OF_OCCUR_DESC = CRM_ATPT_CPTD_CD AND JURIS_DESC = ' ' THEN NULL	
		WHEN PREM_TYP_DESC = LAW_CAT_CD AND JURIS_DESC != ' ' THEN JURIS_DESC
		WHEN PREM_TYP_DESC = LAW_CAT_CD AND JURIS_DESC = ' ' THEN NULL
		WHEN BORO_NM = ' ' AND LOC_OF_OCCUR_DESC = LAW_CAT_CD AND PREM_TYP_DESC = ' ' THEN NULL
		WHEN BORO_NM = ' ' AND LOC_OF_OCCUR_DESC != LAW_CAT_CD AND PREM_TYP_DESC != ' ' THEN NULL
		WHEN BORO_NM = ' ' AND LOC_OF_OCCUR_DESC = LAW_CAT_CD AND PREM_TYP_DESC != ' ' THEN PREM_TYP_DESC
		WHEN BORO_NM = ' ' AND PREM_TYP_DESC = ' ' THEN NULL
		ELSE BORO_NM END;

--- To check:

SELECT
	DISTINCT(BORO_NM)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- There are some undesired results generated. To scan ' ' attributes:

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic AS X
WHERE
	BORO_NM = ' ';

--- Updating ' ' attributes:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	BORO_NM = NULL
WHERE
	BORO_NM = ' ';

--- Final confirmation:

SELECT
	DISTINCT(BORO_NM)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Using a CASE statement, I will extract the original attributes based on patterns observed for LOC_OF_OCCUR_DESC

SELECT
	LOC_OF_OCCUR_DESC,
	CASE
	WHEN LOC_OF_OCCUR_DESC = BORO_NM THEN PREM_TYP_DESC
	WHEN LOC_OF_OCCUR_DESC = BORO_NM AND PREM_TYP_DESC = ' ' THEN NULL
	WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD THEN JURIS_DESC
	WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD AND JURIS_DESC = ' ' THEN NULL
	WHEN LOC_OF_OCCUR_DESC = CRM_ATPT_CPTD_CD THEN JURISDICTION_CODE
	WHEN LOC_OF_OCCUR_DESC = CRM_ATPT_CPTD_CD AND JURISDICTION_CODE = ' ' THEN NULL
	WHEN PREM_TYP_DESC  = BORO_NM THEN JURIS_DESC
	WHEN PREM_TYP_DESC  = BORO_NM AND JURIS_DESC = ' ' THEN NULL
	WHEN JURIS_DESC = BORO_NM THEN JURISDICTION_CODE
	WHEN JURIS_DESC = BORO_NM AND JURISDICTION_CODE = ' ' THEN NULL
	ELSE LOC_OF_OCCUR_DESC END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For Distinct attributes:

SELECT
	DISTINCT(
	CASE
	WHEN LOC_OF_OCCUR_DESC = BORO_NM THEN PREM_TYP_DESC
	WHEN LOC_OF_OCCUR_DESC = BORO_NM AND PREM_TYP_DESC = ' ' THEN NULL
	WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD THEN JURIS_DESC
	WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD AND JURIS_DESC = ' ' THEN NULL
	WHEN LOC_OF_OCCUR_DESC = CRM_ATPT_CPTD_CD THEN JURISDICTION_CODE
	WHEN LOC_OF_OCCUR_DESC = CRM_ATPT_CPTD_CD AND JURISDICTION_CODE = ' ' THEN NULL
	WHEN PREM_TYP_DESC  = BORO_NM THEN JURIS_DESC
	WHEN PREM_TYP_DESC  = BORO_NM AND JURIS_DESC = ' ' THEN NULL
	WHEN JURIS_DESC = BORO_NM THEN JURISDICTION_CODE
	WHEN JURIS_DESC = BORO_NM AND JURISDICTION_CODE = ' ' THEN NULL
	ELSE LOC_OF_OCCUR_DESC END) AS CORRECT

FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	LOC_OF_OCCUR_DESC = 
						CASE
						WHEN LOC_OF_OCCUR_DESC = BORO_NM THEN PREM_TYP_DESC
						WHEN LOC_OF_OCCUR_DESC = BORO_NM AND PREM_TYP_DESC = ' ' THEN NULL
						WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD THEN JURIS_DESC
						WHEN LOC_OF_OCCUR_DESC = LAW_CAT_CD AND JURIS_DESC = ' ' THEN NULL
						WHEN LOC_OF_OCCUR_DESC = CRM_ATPT_CPTD_CD THEN JURISDICTION_CODE
						WHEN LOC_OF_OCCUR_DESC = CRM_ATPT_CPTD_CD AND JURISDICTION_CODE = ' ' THEN NULL
						WHEN PREM_TYP_DESC  = BORO_NM THEN JURIS_DESC
						WHEN PREM_TYP_DESC = BORO_NM AND JURIS_DESC = ' ' THEN NULL
						WHEN JURIS_DESC = BORO_NM THEN JURISDICTION_CODE
						WHEN JURIS_DESC = BORO_NM AND JURISDICTION_CODE = ' ' THEN NULL
						ELSE LOC_OF_OCCUR_DESC END;

--- There will be empty attributes(' '). Updating with NULL

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	LOC_OF_OCCUR_DESC = NULL
WHERE
	LOC_OF_OCCUR_DESC = ' ';

--- For confirmation:

SELECT
	DISTINCT(LOC_OF_OCCUR_DESC)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Using a CASE statement, I will extract the original attributes based on patterns observed for LOC_OF_OCCUR_DESC

SELECT
	PREM_TYP_DESC,
	CASE
	WHEN PREM_TYP_DESC = LOC_OF_OCCUR_DESC THEN JURIS_DESC
	WHEN PREM_TYP_DESC = LOC_OF_OCCUR_DESC AND JURIS_DESC = ' ' THEN NULL
	WHEN PREM_TYP_DESC = BORO_NM THEN JURISDICTION_CODE
	WHEN PREM_TYP_DESC = BORO_NM AND JURISDICTION_CODE = ' ' THEN NULL
	WHEN PREM_TYP_DESC = ' ' AND LOC_OF_OCCUR_DESC IS NULL THEN JURIS_DESC
	WHEN PREM_TYP_DESC = ' ' AND LOC_OF_OCCUR_DESC IS NULL AND JURIS_DESC = ' ' THEN NULL
	WHEN PREM_TYP_DESC = LAW_CAT_CD THEN PARKS_NM
	WHEN PREM_TYP_DESC = LAW_CAT_CD AND PARKS_NM = ' ' THEN NULL
	ELSE PREM_TYP_DESC END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For Distinct attributes:

SELECT
	DISTINCT(
	CASE
	WHEN PREM_TYP_DESC = LOC_OF_OCCUR_DESC THEN JURIS_DESC
	WHEN PREM_TYP_DESC = LOC_OF_OCCUR_DESC AND JURIS_DESC = ' ' THEN NULL
	WHEN PREM_TYP_DESC = BORO_NM THEN JURISDICTION_CODE
	WHEN PREM_TYP_DESC = BORO_NM AND JURISDICTION_CODE = ' ' THEN NULL
	WHEN PREM_TYP_DESC = ' ' AND LOC_OF_OCCUR_DESC IS NULL THEN JURIS_DESC
	WHEN PREM_TYP_DESC = ' ' AND LOC_OF_OCCUR_DESC IS NULL AND JURIS_DESC = ' ' THEN NULL
	WHEN PREM_TYP_DESC = LAW_CAT_CD THEN PARKS_NM
	WHEN PREM_TYP_DESC = LAW_CAT_CD AND PARKS_NM = ' ' THEN NULL
	ELSE PREM_TYP_DESC END) AS CORRECT

FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	PREM_TYP_DESC = 
					CASE
					WHEN PREM_TYP_DESC = LOC_OF_OCCUR_DESC THEN JURIS_DESC
					WHEN PREM_TYP_DESC = LOC_OF_OCCUR_DESC AND JURIS_DESC = ' ' THEN NULL
					WHEN PREM_TYP_DESC = BORO_NM THEN JURISDICTION_CODE
					WHEN PREM_TYP_DESC = BORO_NM AND JURISDICTION_CODE = ' ' THEN NULL
					WHEN PREM_TYP_DESC = ' ' AND LOC_OF_OCCUR_DESC IS NULL THEN JURIS_DESC
					WHEN PREM_TYP_DESC = ' ' AND LOC_OF_OCCUR_DESC IS NULL AND JURIS_DESC = ' ' THEN NULL
					WHEN PREM_TYP_DESC = LAW_CAT_CD THEN PARKS_NM
					WHEN PREM_TYP_DESC = LAW_CAT_CD AND PARKS_NM = ' ' THEN NULL
					ELSE PREM_TYP_DESC END;

--- For confirmation:

SELECT
	DISTINCT(PREM_TYP_DESC)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- There are empty cells. Updating to NULL:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	PREM_TYP_DESC = NULL
WHERE
	PREM_TYP_DESC = ' ';

--- Using a CASE statement, I will extract the original attributes based on patterns observed for JURIS_DESC

SELECT
	JURIS_DESC,
	CASE
	WHEN JURIS_DESC = PREM_TYP_DESC AND LEN(JURISDICTION_CODE) > 3 THEN JURISDICTION_CODE
	WHEN JURIS_DESC = PREM_TYP_DESC AND JURISDICTION_CODE = ' ' THEN NULL
	WHEN JURIS_DESC = LOC_OF_OCCUR_DESC THEN PARKS_NM
	WHEN JURIS_DESC = LOC_OF_OCCUR_DESC AND PARKS_NM = ' ' THEN NULL
	WHEN JURIS_DESC = BORO_NM THEN HADEVELOPT
	WHEN JURIS_DESC = BORO_NM AND HADEVELOPT = ' ' THEN NULL
	WHEN JURIS_DESC = ' ' AND JURISDICTION_CODE = PREM_TYP_DESC THEN PARKS_NM
	ELSE JURIS_DESC END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For distinct attributes:

SELECT
	DISTINCT(
	CASE
	WHEN JURIS_DESC = PREM_TYP_DESC AND LEN(JURISDICTION_CODE) > 3 THEN JURISDICTION_CODE
	WHEN JURIS_DESC = PREM_TYP_DESC AND JURISDICTION_CODE = ' ' THEN NULL
	WHEN JURIS_DESC = LOC_OF_OCCUR_DESC THEN PARKS_NM
	WHEN JURIS_DESC = LOC_OF_OCCUR_DESC AND PARKS_NM = ' ' THEN NULL
	WHEN JURIS_DESC = BORO_NM THEN HADEVELOPT
	WHEN JURIS_DESC = BORO_NM AND HADEVELOPT = ' ' THEN NULL
	WHEN JURIS_DESC = ' ' AND JURISDICTION_CODE = PREM_TYP_DESC THEN PARKS_NM
	ELSE JURIS_DESC END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	JURIS_DESC = 
				CASE
				WHEN JURIS_DESC = PREM_TYP_DESC AND LEN(JURISDICTION_CODE) > 3 THEN JURISDICTION_CODE
				WHEN JURIS_DESC = PREM_TYP_DESC AND JURISDICTION_CODE = ' ' THEN NULL
				WHEN JURIS_DESC = LOC_OF_OCCUR_DESC THEN PARKS_NM
				WHEN JURIS_DESC = LOC_OF_OCCUR_DESC AND PARKS_NM = ' ' THEN NULL
				WHEN JURIS_DESC = BORO_NM THEN HADEVELOPT
				WHEN JURIS_DESC = BORO_NM AND HADEVELOPT = ' ' THEN NULL
				WHEN JURIS_DESC = ' ' AND JURISDICTION_CODE = PREM_TYP_DESC THEN PARKS_NM
				ELSE JURIS_DESC END;

--- For confirmation:

SELECT
	DISTINCT(JURIS_DESC)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- There are empty cells. Updating to NULL:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	JURIS_DESC = NULL
WHERE
	JURIS_DESC = ' ';

--- Using a CASE statement, I will extract the original attributes based on patterns observed for JURIS_DESC

SELECT
	JURISDICTION_CODE,
	CASE
	WHEN JURISDICTION_CODE = JURIS_DESC THEN PARKS_NM
	WHEN JURISDICTION_CODE = ' ' AND PARKS_NM = JURIS_DESC THEN HADEVELOPT
	WHEN JURISDICTION_CODE = PREM_TYP_DESC THEN HADEVELOPT
	WHEN JURISDICTION_CODE = ' ' AND PREM_TYP_DESC = PARKS_NM THEN HOUSING_PSA
	WHEN JURISDICTION_CODE = LOC_OF_OCCUR_DESC THEN HOUSING_PSA
	ELSE JURISDICTION_CODE END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For distinct attributes:

SELECT
	DISTINCT(
	CASE
	WHEN JURISDICTION_CODE = JURIS_DESC THEN PARKS_NM
	WHEN JURISDICTION_CODE = ' ' AND PARKS_NM = JURIS_DESC THEN HADEVELOPT
	WHEN JURISDICTION_CODE = PREM_TYP_DESC THEN HADEVELOPT
	WHEN JURISDICTION_CODE = ' ' AND PREM_TYP_DESC = PARKS_NM THEN HOUSING_PSA
	WHEN JURISDICTION_CODE = LOC_OF_OCCUR_DESC THEN HOUSING_PSA
	ELSE JURISDICTION_CODE END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	JURISDICTION_CODE = 
						CASE
						WHEN JURISDICTION_CODE = JURIS_DESC THEN PARKS_NM
						WHEN JURISDICTION_CODE = ' ' AND PARKS_NM = JURIS_DESC THEN HADEVELOPT
						WHEN JURISDICTION_CODE = PREM_TYP_DESC THEN HADEVELOPT
						WHEN JURISDICTION_CODE = ' ' AND PREM_TYP_DESC = PARKS_NM THEN HOUSING_PSA
						WHEN JURISDICTION_CODE = LOC_OF_OCCUR_DESC THEN HOUSING_PSA
						ELSE JURISDICTION_CODE END;

--- I've noticed the dataset is jumbled, some fall out of pattern. Rectifying:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	JURISDICTION_CODE = HADEVELOPT
WHERE
	 JURIS_DESC = PARKS_NM AND JURIS_DESC = JURISDICTION_CODE;

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	ISNUMERIC(JURISDICTION_CODE) = 0;

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	LEN(PARKS_NM) > 5 AND ISNUMERIC(HADEVELOPT) = 1 AND JURISDICTION_CODE = ' ';

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	JURIS_DESC = PARKS_NM
WHERE
	 LEN(PARKS_NM) > 5 AND ISNUMERIC(HADEVELOPT) = 1 AND JURISDICTION_CODE = ' ';

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	ISNUMERIC(JURISDICTION_CODE) = 0;

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	JURISDICTION_CODE = HADEVELOPT
WHERE
	 LEN(PARKS_NM) > 5 AND ISNUMERIC(HADEVELOPT) = 1 AND JURISDICTION_CODE = ' ';

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	PARKS_NM = JURIS_DESC AND ISNUMERIC(JURISDICTION_CODE) = 0;

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	PREM_TYP_DESC = JURISDICTION_CODE
WHERE
	PARKS_NM = JURIS_DESC AND ISNUMERIC(JURISDICTION_CODE) = 0;

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	JURISDICTION_CODE = HADEVELOPT
WHERE
	PARKS_NM = JURIS_DESC AND ISNUMERIC(JURISDICTION_CODE) = 0;

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	LEN(X_COORD_CD) > 5 AND ISNUMERIC(X_COORD_CD) = 1 AND ISNUMERIC(JURISDICTION_CODE) = 0 AND JURISDICTION_CODE = ' ';

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	JURISDICTION_CODE = NULL
WHERE
	LEN(X_COORD_CD) > 5 AND ISNUMERIC(X_COORD_CD) = 1 AND ISNUMERIC(JURISDICTION_CODE) = 0 AND JURISDICTION_CODE = ' ';

--- For confiirmation:

SELECT
	DISTINCT(JURISDICTION_CODE)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Using a CASE statement, I will extract the original attributes based on patterns observed for PARKS_NM
-- From a quick survey, I have noticed the contents of the column consist of Alphabetic characters and empty values

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

SELECT
	PARKS_NM,
	CASE
	WHEN PARKS_NM = JURIS_DESC THEN HOUSING_PSA
	WHEN PARKS_NM = ' ' AND JURIS_DESC IS NULL AND JURISDICTION_CODE = HADEVELOPT THEN HOUSING_PSA
	WHEN PARKS_NM = PREM_TYP_DESC THEN X_COORD_CD
	WHEN PARKS_NM = ' ' AND PREM_TYP_DESC IS NULL AND JURIS_DESC = HADEVELOPT AND JURISDICTION_CODE = HOUSING_PSA THEN X_COORD_CD
	WHEN PARKS_NM = JURISDICTION_CODE THEN HADEVELOPT
	WHEN PARKS_NM = ' ' AND JURISDICTION_CODE IS NULL THEN HADEVELOPT
	ELSE PARKS_NM END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For distinct attributes:
	
SELECT
	DISTINCT(
	CASE
	WHEN PARKS_NM = JURIS_DESC THEN HOUSING_PSA
	WHEN PARKS_NM = ' ' AND JURIS_DESC IS NULL AND JURISDICTION_CODE = HADEVELOPT THEN HOUSING_PSA
	WHEN PARKS_NM = PREM_TYP_DESC THEN X_COORD_CD
	WHEN PARKS_NM = ' ' AND PREM_TYP_DESC IS NULL AND JURIS_DESC = HADEVELOPT AND JURISDICTION_CODE = HOUSING_PSA THEN X_COORD_CD
	WHEN PARKS_NM = JURISDICTION_CODE THEN HADEVELOPT
	WHEN PARKS_NM = ' ' AND JURISDICTION_CODE IS NULL THEN HADEVELOPT
	ELSE PARKS_NM END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- I noticed there among the results, there is still an outlier. To narrow it dowm, I will use a join statement nested in a subquery:

SELECT
	*
FROM
	(
		SELECT
			CASE
			WHEN Q.PARKS_NM = Q.JURIS_DESC THEN Q.HOUSING_PSA
			WHEN Q.PARKS_NM = ' ' AND Q.JURIS_DESC IS NULL AND Q.JURISDICTION_CODE = Q.HADEVELOPT THEN Q.HOUSING_PSA
			WHEN Q.PARKS_NM = Q.PREM_TYP_DESC THEN Q.X_COORD_CD
			WHEN Q.PARKS_NM = ' ' AND Q.PREM_TYP_DESC IS NULL AND Q.JURIS_DESC = Q.HADEVELOPT AND Q.JURISDICTION_CODE = Q.HOUSING_PSA THEN Q.X_COORD_CD
			WHEN Q.PARKS_NM = Q.JURISDICTION_CODE THEN Q.HADEVELOPT
			WHEN Q.PARKS_NM = ' ' AND Q.JURISDICTION_CODE IS NULL THEN Q.HADEVELOPT
			ELSE Q.PARKS_NM END AS CORRECT,
			P.*
		FROM
			PortfolioProject..NYPD_Complaint_Data_Historic AS Q
		JOIN
			PortfolioProject..NYPD_Complaint_Data_Historic AS P
		ON
	Q.CMPLNT_NUM = P.CMPLNT_NUM
	) dt
WHERE
	CORRECT = '97';

-- The results show there are cases in which the original CASE statement does not address. Rectifying and checking:

SELECT
	DISTINCT(
	CASE
	WHEN PARKS_NM = JURIS_DESC THEN HOUSING_PSA
	WHEN PARKS_NM = ' ' AND JURIS_DESC IS NULL AND JURISDICTION_CODE = HADEVELOPT THEN HOUSING_PSA
	WHEN PARKS_NM = PREM_TYP_DESC THEN X_COORD_CD
	WHEN PARKS_NM = ' ' AND PREM_TYP_DESC IS NULL AND JURIS_DESC = HADEVELOPT AND JURISDICTION_CODE = HOUSING_PSA THEN X_COORD_CD
	WHEN PARKS_NM = JURIS_DESC AND JURIS_DESC = PREM_TYP_DESC AND PREM_TYP_DESC = HADEVELOPT AND JURISDICTION_CODE = HOUSING_PSA THEN  X_COORD_CD
	WHEN PARKS_NM = JURISDICTION_CODE THEN HADEVELOPT
	WHEN PARKS_NM = ' ' AND JURISDICTION_CODE IS NULL THEN HADEVELOPT
	ELSE PARKS_NM END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	PARKS_NM = 
				CASE
				WHEN PARKS_NM = JURIS_DESC THEN HOUSING_PSA
				WHEN PARKS_NM = ' ' AND JURIS_DESC IS NULL AND JURISDICTION_CODE = HADEVELOPT THEN HOUSING_PSA
				WHEN PARKS_NM = PREM_TYP_DESC THEN X_COORD_CD
				WHEN PARKS_NM = ' ' AND PREM_TYP_DESC IS NULL AND JURIS_DESC = HADEVELOPT AND JURISDICTION_CODE = HOUSING_PSA THEN X_COORD_CD
				WHEN PARKS_NM = JURIS_DESC AND JURIS_DESC = PREM_TYP_DESC AND PREM_TYP_DESC = HADEVELOPT AND JURISDICTION_CODE = HOUSING_PSA THEN  X_COORD_CD
				WHEN PARKS_NM = JURISDICTION_CODE THEN HADEVELOPT
				WHEN PARKS_NM = ' ' AND JURISDICTION_CODE IS NULL THEN HADEVELOPT
				ELSE PARKS_NM END;

--- Updating empty and 'NA' cells to NULL

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	PARKS_NM = NULL
WHERE
	PARKS_NM = 'NA' OR PARKS_NM = ' ';

-- I noticed some cells have data with quotations(") in them
--- To update, REPLACE will be applied.

SELECT
	CASE
	WHEN PARKS_NM LIKE '%"%' THEN REPLACE(PARKS_NM, '"', '')
	ELSE PARKS_NM END AS TEST
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	PARKS_NM LIKE '%"%' OR PARKS_NM LIKE '%""%';

-- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	PARKS_NM = 
			CASE
			WHEN PARKS_NM LIKE '%"%' THEN REPLACE(PARKS_NM, '"', '')
			ELSE PARKS_NM END
WHERE 
	PARKS_NM LIKE '%"%' OR PARKS_NM LIKE '%""%';

-- From a quick survey, I have come to the conclusion that 'NA' is not an attribute of HADEVELOPT which helps in drawing the CASE statement for extraction

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	HADEVELOPT LIKE '%"%';

SELECT
	HADEVELOPT,
	CASE
	WHEN HADEVELOPT = PARKS_NM THEN HOUSING_PSA
	WHEN HADEVELOPT = 'NA' AND PARKS_NM IS NULL THEN HOUSING_PSA
	WHEN HADEVELOPT = ' ' AND PARKS_NM IS NULL AND HOUSING_PSA = 'NA' THEN NULL
	WHEN HADEVELOPT = ' ' AND PARKS_NM IS NULL AND HOUSING_PSA = ' ' AND X_COORD_CD = 'NA' THEN NULL
	WHEN HADEVELOPT = JURIS_DESC THEN Y_COORD_CD
	WHEN HADEVELOPT = JURISDICTION_CODE THEN X_COORD_CD
	ELSE HADEVELOPT END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For distinct attributes:

SELECT
	DISTINCT(
	CASE
	WHEN HADEVELOPT = PARKS_NM THEN HOUSING_PSA
	WHEN HADEVELOPT = 'NA' AND PARKS_NM IS NULL THEN HOUSING_PSA
	WHEN HADEVELOPT = ' ' AND PARKS_NM IS NULL AND HOUSING_PSA = 'NA' THEN NULL
	WHEN HADEVELOPT = ' ' AND PARKS_NM IS NULL AND HOUSING_PSA = ' ' AND X_COORD_CD = 'NA' THEN NULL
	WHEN HADEVELOPT = JURIS_DESC THEN Y_COORD_CD
	WHEN HADEVELOPT = JURISDICTION_CODE THEN X_COORD_CD
	ELSE HADEVELOPT END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	HADEVELOPT = 
				CASE
				WHEN HADEVELOPT = PARKS_NM THEN HOUSING_PSA
				WHEN HADEVELOPT = 'NA' AND PARKS_NM IS NULL THEN HOUSING_PSA
				WHEN HADEVELOPT = ' ' AND PARKS_NM IS NULL AND HOUSING_PSA = 'NA' THEN NULL
				WHEN HADEVELOPT = ' ' AND PARKS_NM IS NULL AND HOUSING_PSA = ' ' AND X_COORD_CD = 'NA' THEN NULL
				WHEN HADEVELOPT = JURIS_DESC THEN Y_COORD_CD
				WHEN HADEVELOPT = JURISDICTION_CODE THEN X_COORD_CD
				ELSE HADEVELOPT END;

--- I noticed there among the results, there are still outliers. To narrow them down:

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	HADEVELOPT LIKE '%"%';

-- There is no definite pattern to address all inconsistencies so they will be addressed accordingly

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	HADEVELOPT = '"UNITY PLAZA (SITES 17' AND X_COORD_CD = '"UNITY PLAZA (SITES 17';

SELECT
	TRIM('"' FROM (CONCAT(HADEVELOPT, ' ', Y_COORD_CD, ' ', SUSP_AGE_GROUP))) AS TEST
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	HADEVELOPT = '"UNITY PLAZA (SITES 17' AND X_COORD_CD = '"UNITY PLAZA (SITES 17';

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	HADEVELOPT = TRIM('"' FROM (CONCAT(HADEVELOPT, ' ', Y_COORD_CD, ' ', SUSP_AGE_GROUP)))
WHERE 
	HADEVELOPT = '"UNITY PLAZA (SITES 17' AND X_COORD_CD = '"UNITY PLAZA (SITES 17';

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	HADEVELOPT = '"UNITY PLAZA (SITES 17' AND Y_COORD_CD = '"UNITY PLAZA (SITES 17';

SELECT
	TRIM('"' FROM (CONCAT(HADEVELOPT, ' ', SUSP_AGE_GROUP, ' ', SUSP_RACE))) AS TEST
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	HADEVELOPT = '"UNITY PLAZA (SITES 17' AND Y_COORD_CD = '"UNITY PLAZA (SITES 17';

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	HADEVELOPT = TRIM('"' FROM (CONCAT(HADEVELOPT, ' ', SUSP_AGE_GROUP, ' ', SUSP_RACE)))
WHERE 
	HADEVELOPT = '"UNITY PLAZA (SITES 17' AND Y_COORD_CD = '"UNITY PLAZA (SITES 17';

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	HADEVELOPT = '"UNITY PLAZA (SITES 17' AND HOUSING_PSA = '"UNITY PLAZA (SITES 17';

SELECT
	TRIM('"' FROM (CONCAT(HADEVELOPT, ' ', X_COORD_CD, ' ', Y_COORD_CD))) AS TEST
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	HADEVELOPT = '"UNITY PLAZA (SITES 17' AND HOUSING_PSA = '"UNITY PLAZA (SITES 17';

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	HADEVELOPT = TRIM('"' FROM (CONCAT(HADEVELOPT, ' ', X_COORD_CD, ' ', Y_COORD_CD)))
WHERE 
	HADEVELOPT = '"UNITY PLAZA (SITES 17' AND HOUSING_PSA = '"UNITY PLAZA (SITES 17';

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	HADEVELOPT = '"UNITY PLAZA (SITES 17' AND X_COORD_CD = '25A)"';

SELECT
	TRIM('"' FROM (CONCAT(HADEVELOPT, ' ', HOUSING_PSA, ' ', X_COORD_CD))) AS TEST
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	HADEVELOPT = '"UNITY PLAZA (SITES 17' AND X_COORD_CD = '25A)"';

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	HADEVELOPT = TRIM('"' FROM (CONCAT(HADEVELOPT, ' ', HOUSING_PSA, ' ', X_COORD_CD)))
WHERE 
	HADEVELOPT = '"UNITY PLAZA (SITES 17' AND X_COORD_CD = '25A)"';

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	HADEVELOPT LIKE '%"%';

SELECT
	REPLACE(HADEVELOPT, '"', '') AS TEST
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	HADEVELOPT LIKE '%"%';

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	HADEVELOPT = REPLACE(HADEVELOPT, '"', '')
WHERE 
	HADEVELOPT LIKE '%"%';

--- Updating empty and 'NA' cells to NULL

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	HADEVELOPT = NULL
WHERE
	HADEVELOPT = 'NA' OR HADEVELOPT = ' ';

--- For confirmation:

SELECT
	DISTINCT(HADEVELOPT)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Using a CASE statement, I will extract the original attributes based on patterns observed for PARKS_NM
-- From a quick survey, I have noticed the contents of the column consist of Alphabetic characters and empty values

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

SELECT
	HOUSING_PSA,
	CASE
	WHEN HOUSING_PSA = HADEVELOPT THEN X_COORD_CD
	WHEN HOUSING_PSA = 'NA' AND HADEVELOPT IS NULL AND LEN(X_COORD_CD) >= 6 THEN NULL
	WHEN HOUSING_PSA = ' ' AND PARKS_NM IS NULL AND HADEVELOPT IS NULL AND X_COORD_CD = ' ' THEN NULL
	WHEN HOUSING_PSA = ' ' AND PARKS_NM IS NULL AND HADEVELOPT IS NULL AND X_COORD_CD = 'NA' THEN NULL
	WHEN HOUSING_PSA = PARKS_NM AND Y_COORD_CD = 'NA' THEN NULL
	WHEN HOUSING_PSA = PARKS_NM AND Y_COORD_CD = ' ' THEN NULL
	WHEN HOUSING_PSA = PARKS_NM AND ISNUMERIC(Y_COORD_CD) = 1 THEN Y_COORD_CD
	WHEN HOUSING_PSA = 'NA' AND PARKS_NM IS NULL AND HADEVELOPT IS NULL AND X_COORD_CD = ' ' THEN Y_COORD_CD
	WHEN HOUSING_PSA = 'NA' AND PARKS_NM IS NULL AND HADEVELOPT IS NULL AND X_COORD_CD = 'NA' THEN Y_COORD_CD
	WHEN HOUSING_PSA = JURISDICTION_CODE AND SUSP_AGE_GROUP = 'NA' THEN NULL
	WHEN HOUSING_PSA = JURISDICTION_CODE AND SUSP_AGE_GROUP != 'NA' THEN SUSP_AGE_GROUP
	WHEN HOUSING_PSA = JURISDICTION_CODE AND ISNUMERIC(SUSP_AGE_GROUP) = 1 THEN SUSP_AGE_GROUP
	WHEN HOUSING_PSA = JURISDICTION_CODE AND SUSP_AGE_GROUP = ' ' THEN NULL
	ELSE HOUSING_PSA END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For distinct attributes:

SELECT
	DISTINCT(
	CASE
	WHEN HOUSING_PSA = HADEVELOPT THEN X_COORD_CD
	WHEN HOUSING_PSA = 'NA' AND HADEVELOPT IS NULL AND LEN(X_COORD_CD) >= 6 THEN NULL
	WHEN HOUSING_PSA = ' ' AND PARKS_NM IS NULL AND HADEVELOPT IS NULL AND X_COORD_CD = ' ' THEN NULL
	WHEN HOUSING_PSA = ' ' AND PARKS_NM IS NULL AND HADEVELOPT IS NULL AND X_COORD_CD = 'NA' THEN NULL
	WHEN HOUSING_PSA = PARKS_NM AND Y_COORD_CD = 'NA' THEN NULL
	WHEN HOUSING_PSA = PARKS_NM AND Y_COORD_CD = ' ' THEN NULL
	WHEN HOUSING_PSA = PARKS_NM AND ISNUMERIC(Y_COORD_CD) = 1 THEN Y_COORD_CD
	WHEN HOUSING_PSA = 'NA' AND PARKS_NM IS NULL AND HADEVELOPT IS NULL AND X_COORD_CD = ' ' THEN Y_COORD_CD
	WHEN HOUSING_PSA = 'NA' AND PARKS_NM IS NULL AND HADEVELOPT IS NULL AND X_COORD_CD = 'NA' THEN Y_COORD_CD
	WHEN HOUSING_PSA = JURISDICTION_CODE AND SUSP_AGE_GROUP = 'NA' THEN NULL
	WHEN HOUSING_PSA = JURISDICTION_CODE AND SUSP_AGE_GROUP != 'NA' THEN SUSP_AGE_GROUP
	WHEN HOUSING_PSA = JURISDICTION_CODE AND ISNUMERIC(SUSP_AGE_GROUP) = 1 THEN SUSP_AGE_GROUP
	WHEN HOUSING_PSA = JURISDICTION_CODE AND SUSP_AGE_GROUP = ' ' THEN NULL
	ELSE HOUSING_PSA END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- To filter:

SELECT
	*
FROM
	(
		SELECT
			CASE
			WHEN Q.HOUSING_PSA = Q.HADEVELOPT THEN Q.X_COORD_CD
			WHEN Q.HOUSING_PSA = 'NA' AND Q.HADEVELOPT IS NULL AND LEN(Q.X_COORD_CD) >= 6 THEN NULL
			WHEN Q.HOUSING_PSA = ' ' AND Q.PARKS_NM IS NULL AND Q.HADEVELOPT IS NULL AND Q.X_COORD_CD = ' ' THEN NULL
			WHEN Q.HOUSING_PSA = ' ' AND Q.PARKS_NM IS NULL AND Q.HADEVELOPT IS NULL AND Q.X_COORD_CD = 'NA' THEN NULL
			WHEN Q.HOUSING_PSA = Q.PARKS_NM AND Q.Y_COORD_CD = 'NA' THEN NULL
			WHEN Q.HOUSING_PSA = Q.PARKS_NM AND Q.Y_COORD_CD = ' ' THEN NULL
			WHEN Q.HOUSING_PSA = Q.PARKS_NM AND ISNUMERIC(Q.Y_COORD_CD) = 1 THEN Q.Y_COORD_CD
			WHEN Q.HOUSING_PSA = 'NA' AND Q.PARKS_NM IS NULL AND Q.HADEVELOPT IS NULL AND Q.X_COORD_CD = ' ' THEN Q.Y_COORD_CD
			WHEN Q.HOUSING_PSA = 'NA' AND Q.PARKS_NM IS NULL AND Q.HADEVELOPT IS NULL AND Q.X_COORD_CD = 'NA' THEN Q.Y_COORD_CD
			WHEN Q.HOUSING_PSA = Q.JURISDICTION_CODE AND Q.SUSP_AGE_GROUP = 'NA' THEN NULL
			WHEN Q.HOUSING_PSA = Q.JURISDICTION_CODE AND Q.SUSP_AGE_GROUP != 'NA' THEN Q.SUSP_AGE_GROUP
			WHEN Q.HOUSING_PSA = Q.JURISDICTION_CODE AND ISNUMERIC(Q.SUSP_AGE_GROUP) = 1 THEN Q.SUSP_AGE_GROUP
			WHEN Q.HOUSING_PSA = Q.JURISDICTION_CODE AND Q.SUSP_AGE_GROUP = ' ' THEN NULL
			ELSE Q.HOUSING_PSA END AS CORRECT,
			P.*
		FROM
			PortfolioProject..NYPD_Complaint_Data_Historic AS Q
		JOIN
			PortfolioProject..NYPD_Complaint_Data_Historic AS P
		ON
	Q.CMPLNT_NUM = P.CMPLNT_NUM
	) dt
WHERE 
	CORRECT LIKE '%"%';

--- I have taken note of indiscrepancies. Updating the filter:

SELECT
	*
FROM
	(
		SELECT
			CASE
			WHEN Q.HOUSING_PSA = Q.HADEVELOPT AND Q.X_COORD_CD NOT LIKE '"%' THEN Q.X_COORD_CD
			WHEN Q.HOUSING_PSA = Q.HADEVELOPT AND Q.X_COORD_CD LIKE '"%' THEN REPLACE(CONCAT(Q.X_COORD_CD, Q.Y_COORD_CD), '"', '')
			WHEN Q.HOUSING_PSA = 'NA' AND Q.HADEVELOPT IS NULL AND LEN(Q.X_COORD_CD) >= 6 AND ISNUMERIC(Q.X_COORD_CD) = 1 THEN NULL
			WHEN Q.HOUSING_PSA = 'NA' AND Q.HADEVELOPT IS NULL AND LEN(Q.Y_COORD_CD) < 6 AND ISNUMERIC(Q.Y_COORD_CD) = 1 THEN Q.Y_COORD_CD
			WHEN Q.HOUSING_PSA = 'NA' AND Q.HADEVELOPT IS NULL AND LEN(Q.Y_COORD_CD) < 6 AND ISNUMERIC(Q.Y_COORD_CD) = 0 THEN NULL
			WHEN Q.HOUSING_PSA = Q.PARKS_NM AND ISNUMERIC(Q.Y_COORD_CD) = 0 THEN NULL
			WHEN Q.HOUSING_PSA = Q.PARKS_NM AND ISNUMERIC(Q.Y_COORD_CD) = 1 THEN Q.Y_COORD_CD
			WHEN Q.HOUSING_PSA = Q.JURISDICTION_CODE AND ISNUMERIC(Q.SUSP_AGE_GROUP) = 0 THEN NULL
			WHEN Q.HOUSING_PSA = Q.JURISDICTION_CODE AND ISNUMERIC(Q.SUSP_AGE_GROUP) = 1 THEN Q.SUSP_AGE_GROUP
			WHEN REPLACE(CONCAT(Q.HOUSING_PSA, Q.X_COORD_CD, Q.Y_COORD_CD), '"', '') = Q.HADEVELOPT AND ISNUMERIC(Q.SUSP_AGE_GROUP) = 1 AND Q.HOUSING_PSA LIKE '"%'THEN Q.SUSP_AGE_GROUP
			WHEN ISNUMERIC(REPLACE(Q.HOUSING_PSA, '"', '')) = 1 AND Q.HOUSING_PSA LIKE '"%'THEN REPLACE(CONCAT(Q.HOUSING_PSA, Q.X_COORD_CD), '"', '')
			WHEN Q.HOUSING_PSA = Q.JURISDICTION_CODE AND Q.SUSP_AGE_GROUP LIKE '"%' THEN REPLACE(CONCAT(Q.SUSP_AGE_GROUP, Q.SUSP_RACE), '"', '')
			ELSE Q.HOUSING_PSA END AS CORRECT,
			P.*
		FROM
			PortfolioProject..NYPD_Complaint_Data_Historic AS Q
		JOIN
			PortfolioProject..NYPD_Complaint_Data_Historic AS P
		ON
	Q.CMPLNT_NUM = P.CMPLNT_NUM
	) dt
WHERE 
	CORRECT LIKE '%"%';

--- Everything has been dealt with accordingly
--- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	HOUSING_PSA = 
			CASE
				WHEN HOUSING_PSA = HADEVELOPT AND X_COORD_CD NOT LIKE '"%' THEN X_COORD_CD
				WHEN HOUSING_PSA = HADEVELOPT AND X_COORD_CD LIKE '"%' THEN REPLACE(CONCAT(X_COORD_CD, Y_COORD_CD), '"', '')
				WHEN HOUSING_PSA = 'NA' AND HADEVELOPT IS NULL AND LEN(X_COORD_CD) >= 6 AND ISNUMERIC(X_COORD_CD) = 1 THEN NULL
				WHEN HOUSING_PSA = 'NA' AND HADEVELOPT IS NULL AND LEN(Y_COORD_CD) < 6 AND ISNUMERIC(Y_COORD_CD) = 1 THEN Y_COORD_CD
				WHEN HOUSING_PSA = 'NA' AND HADEVELOPT IS NULL AND LEN(Y_COORD_CD) < 6 AND ISNUMERIC(Y_COORD_CD) = 0 THEN NULL
				WHEN HOUSING_PSA = PARKS_NM AND ISNUMERIC(Y_COORD_CD) = 0 THEN NULL
				WHEN HOUSING_PSA = PARKS_NM AND ISNUMERIC(Y_COORD_CD) = 1 THEN Y_COORD_CD
				WHEN HOUSING_PSA = JURISDICTION_CODE AND ISNUMERIC(SUSP_AGE_GROUP) = 0 THEN NULL
				WHEN HOUSING_PSA = JURISDICTION_CODE AND ISNUMERIC(SUSP_AGE_GROUP) = 1 THEN SUSP_AGE_GROUP
				WHEN REPLACE(CONCAT(HOUSING_PSA, X_COORD_CD, Y_COORD_CD), '"', '') = HADEVELOPT AND ISNUMERIC(SUSP_AGE_GROUP) = 1 AND HOUSING_PSA LIKE '"%'THEN SUSP_AGE_GROUP
				WHEN ISNUMERIC(REPLACE(HOUSING_PSA, '"', '')) = 1 AND HOUSING_PSA LIKE '"%'THEN REPLACE(CONCAT(HOUSING_PSA, X_COORD_CD), '"', '')
				WHEN HOUSING_PSA = JURISDICTION_CODE AND SUSP_AGE_GROUP LIKE '"%' THEN REPLACE(CONCAT(SUSP_AGE_GROUP, SUSP_RACE), '"', '')
				ELSE HOUSING_PSA END;

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	HOUSING_PSA = NULL
WHERE
	HOUSING_PSA = ' ';

--- Using a CASE statement, I will extract the original attributes using the condition of X_COORD_CD and Y_COORD_CD being a 7 charater attribute

SELECT
	X_COORD_CD,
	CASE
	WHEN ISNUMERIC(X_COORD_CD) = 0 AND ISNUMERIC(Y_COORD_CD) = 1 AND LEN(Y_COORD_CD) >= 7 THEN Y_COORD_CD
	WHEN ISNUMERIC(Y_COORD_CD) = 0 AND ISNUMERIC(SUSP_AGE_GROUP) = 1 AND LEN(SUSP_AGE_GROUP) >= 7 THEN SUSP_AGE_GROUP 
	WHEN ISNUMERIC(SUSP_AGE_GROUP) = 0 AND ISNUMERIC(SUSP_RACE) = 1 AND LEN(SUSP_RACE) >= 7 THEN SUSP_RACE
	WHEN ISNUMERIC(SUSP_RACE) = 0 AND ISNUMERIC(SUSP_SEX) = 1 AND LEN(SUSP_SEX) >= 7 THEN SUSP_SEX
	WHEN ISNUMERIC(SUSP_SEX) = 0 AND ISNUMERIC(TRANSIT_DISTRICT) = 1 AND LEN(TRANSIT_DISTRICT) >= 7 THEN TRANSIT_DISTRICT
	ELSE X_COORD_CD END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For distinct attributes:

SELECT
	DISTINCT(
	CASE
	WHEN ISNUMERIC(X_COORD_CD) = 0 AND ISNUMERIC(Y_COORD_CD) = 1 AND LEN(Y_COORD_CD) >= 7 THEN Y_COORD_CD
	WHEN ISNUMERIC(Y_COORD_CD) = 0 AND ISNUMERIC(SUSP_AGE_GROUP) = 1 AND LEN(SUSP_AGE_GROUP) >= 7 THEN SUSP_AGE_GROUP 
	WHEN ISNUMERIC(SUSP_AGE_GROUP) = 0 AND ISNUMERIC(SUSP_RACE) = 1 AND LEN(SUSP_RACE) >= 7 THEN SUSP_RACE
	WHEN ISNUMERIC(SUSP_RACE) = 0 AND ISNUMERIC(SUSP_SEX) = 1 AND LEN(SUSP_SEX) >= 7 THEN SUSP_SEX
	WHEN ISNUMERIC(SUSP_SEX) = 0 AND ISNUMERIC(TRANSIT_DISTRICT) = 1 AND LEN(TRANSIT_DISTRICT) >= 7 THEN TRANSIT_DISTRICT
	ELSE X_COORD_CD END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- To filter:

SELECT
	*
FROM
	(
		SELECT
			CASE
			WHEN ISNUMERIC(Q.X_COORD_CD) = 0 AND ISNUMERIC(Q.Y_COORD_CD) = 1 AND LEN(Q.Y_COORD_CD) >= 6 THEN Q.Y_COORD_CD
			WHEN ISNUMERIC(Q.Y_COORD_CD) = 0 AND ISNUMERIC(Q.SUSP_AGE_GROUP) = 1 AND LEN(Q.SUSP_AGE_GROUP) >= 6 THEN Q.SUSP_AGE_GROUP 
			WHEN ISNUMERIC(Q.SUSP_AGE_GROUP) = 0 AND ISNUMERIC(Q.SUSP_RACE) = 1 AND LEN(Q.SUSP_RACE) >= 6 THEN Q.SUSP_RACE
			WHEN ISNUMERIC(Q.SUSP_RACE) = 0 AND ISNUMERIC(Q.SUSP_SEX) = 1 AND LEN(Q.SUSP_SEX) >= 6 THEN Q.SUSP_SEX
			WHEN ISNUMERIC(Q.SUSP_SEX) = 0 AND ISNUMERIC(Q.TRANSIT_DISTRICT) = 1 AND LEN(Q.TRANSIT_DISTRICT) >= 6 THEN Q.TRANSIT_DISTRICT
			ELSE Q.X_COORD_CD END AS CORRECT,
			P.*
		FROM
			PortfolioProject..NYPD_Complaint_Data_Historic AS Q
		JOIN
			PortfolioProject..NYPD_Complaint_Data_Historic AS P
		ON
	Q.CMPLNT_NUM = P.CMPLNT_NUM
	) dt
WHERE
	ISNUMERIC(CORRECT) = 0;

--- I have taken note of indiscrepancies. Updating the filter:

SELECT
	*
FROM
	(
		SELECT
			CASE
			WHEN Q.X_COORD_CD = Q.HOUSING_PSA AND ISNUMERIC(Q.Y_COORD_CD) = 1 AND LEN(Q.Y_COORD_CD) >= 6 THEN Q.Y_COORD_CD
			WHEN ISNUMERIC(Q.X_COORD_CD) = 0 AND ISNUMERIC(Q.Y_COORD_CD) = 1 AND LEN(Q.Y_COORD_CD) >= 6 THEN Q.Y_COORD_CD
			WHEN ISNUMERIC(Q.Y_COORD_CD) = 0 AND ISNUMERIC(Q.SUSP_AGE_GROUP) = 1 AND LEN(Q.SUSP_AGE_GROUP) >= 6 THEN Q.SUSP_AGE_GROUP
			WHEN ISNUMERIC(Q.Y_COORD_CD) = 1 AND LEN(Q.Y_COORD_CD) < 6 AND ISNUMERIC(Q.SUSP_AGE_GROUP) = 1 AND LEN(Q.SUSP_AGE_GROUP) >= 6 THEN Q.SUSP_AGE_GROUP 
			WHEN ISNUMERIC(Q.SUSP_AGE_GROUP) = 0 AND ISNUMERIC(Q.SUSP_RACE) = 1 AND LEN(Q.SUSP_RACE) >= 6 THEN Q.SUSP_RACE
			WHEN ISNUMERIC(Q.SUSP_AGE_GROUP) = 1 AND LEN(Q.SUSP_AGE_GROUP) < 6 AND ISNUMERIC(Q.SUSP_RACE) = 1 AND LEN(Q.SUSP_RACE) >= 6 THEN Q.SUSP_RACE 
			WHEN ISNUMERIC(Q.SUSP_RACE) = 0 AND ISNUMERIC(Q.SUSP_SEX) = 1 AND LEN(Q.SUSP_SEX) >= 6 THEN Q.SUSP_SEX
			WHEN ISNUMERIC(Q.SUSP_RACE) = 1 AND LEN(Q.SUSP_RACE) < 6 AND ISNUMERIC(Q.SUSP_SEX) = 1 AND LEN(Q.SUSP_SEX) >= 6 THEN Q.SUSP_SEX
			WHEN ISNUMERIC(Q.SUSP_SEX) = 0 AND ISNUMERIC(Q.TRANSIT_DISTRICT) = 1 AND LEN(Q.TRANSIT_DISTRICT) >= 6 THEN Q.TRANSIT_DISTRICT
			WHEN ISNUMERIC(Q.SUSP_SEX) = 1 AND LEN(Q.SUSP_SEX) < 6 AND ISNUMERIC(Q.TRANSIT_DISTRICT) = 1 AND LEN(Q.TRANSIT_DISTRICT) >= 6 THEN Q.TRANSIT_DISTRICT
			ELSE Q.X_COORD_CD END AS CORRECT,
			P.*
		FROM
			PortfolioProject..NYPD_Complaint_Data_Historic AS Q
		JOIN
			PortfolioProject..NYPD_Complaint_Data_Historic AS P
		ON
	Q.CMPLNT_NUM = P.CMPLNT_NUM
	) dt
WHERE
	ISNUMERIC(CORRECT) = 0;

--- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	X_COORD_CD = 
			CASE
			WHEN X_COORD_CD = HOUSING_PSA AND ISNUMERIC(Y_COORD_CD) = 1 AND LEN(Y_COORD_CD) >= 6 THEN Y_COORD_CD
			WHEN ISNUMERIC(X_COORD_CD) = 0 AND ISNUMERIC(Y_COORD_CD) = 1 AND LEN(Y_COORD_CD) >= 6 THEN Y_COORD_CD
			WHEN ISNUMERIC(X_COORD_CD) = 0 AND ISNUMERIC(Y_COORD_CD) = 1 AND LEN(Y_COORD_CD) >= 6 THEN Y_COORD_CD
			WHEN ISNUMERIC(Y_COORD_CD) = 0 AND ISNUMERIC(SUSP_AGE_GROUP) = 1 AND LEN(SUSP_AGE_GROUP) >= 6 THEN SUSP_AGE_GROUP
			WHEN ISNUMERIC(Y_COORD_CD) = 1 AND LEN(Y_COORD_CD) < 6 AND ISNUMERIC(SUSP_AGE_GROUP) = 1 AND LEN(SUSP_AGE_GROUP) >= 6 THEN SUSP_AGE_GROUP 
			WHEN ISNUMERIC(SUSP_AGE_GROUP) = 0 AND ISNUMERIC(SUSP_RACE) = 1 AND LEN(SUSP_RACE) >= 6 THEN SUSP_RACE
			WHEN ISNUMERIC(SUSP_AGE_GROUP) = 1 AND LEN(SUSP_AGE_GROUP) < 6 AND ISNUMERIC(SUSP_RACE) = 1 AND LEN(SUSP_RACE) >= 6 THEN SUSP_RACE 
			WHEN ISNUMERIC(SUSP_RACE) = 0 AND ISNUMERIC(SUSP_SEX) = 1 AND LEN(SUSP_SEX) >= 6 THEN SUSP_SEX
			WHEN ISNUMERIC(SUSP_RACE) = 1 AND LEN(SUSP_RACE) < 6 AND ISNUMERIC(SUSP_SEX) = 1 AND LEN(SUSP_SEX) >= 6 THEN SUSP_SEX
			WHEN ISNUMERIC(SUSP_SEX) = 0 AND ISNUMERIC(TRANSIT_DISTRICT) = 1 AND LEN(TRANSIT_DISTRICT) >= 6 THEN TRANSIT_DISTRICT
			WHEN ISNUMERIC(SUSP_SEX) = 1 AND LEN(SUSP_SEX) < 6 AND ISNUMERIC(TRANSIT_DISTRICT) = 1 AND LEN(TRANSIT_DISTRICT) >= 6 THEN TRANSIT_DISTRICT
			ELSE X_COORD_CD END;

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	X_COORD_CD = NULL
WHERE
	ISNUMERIC(X_COORD_CD) = 0;

--- Using a CASE statement, I will extract the original attributes using X_COORD_CD as a reference point for Y_COORD_CD

SELECT
	Y_COORD_CD,
	CASE
	WHEN ISNUMERIC(Y_COORD_CD) = 1 AND LEN(Y_COORD_CD) >= 6 AND X_COORD_CD = Y_COORD_CD THEN SUSP_AGE_GROUP
	WHEN ISNUMERIC(Y_COORD_CD) = 0 AND X_COORD_CD != Y_COORD_CD THEN SUSP_RACE
	WHEN ISNUMERIC(SUSP_RACE) = 1 AND LEN(SUSP_RACE) >= 6 AND X_COORD_CD = SUSP_RACE THEN SUSP_SEX
	WHEN ISNUMERIC(SUSP_SEX) = 1 AND LEN(SUSP_SEX) >= 6 AND X_COORD_CD = SUSP_SEX THEN TRANSIT_DISTRICT
	WHEN ISNUMERIC(TRANSIT_DISTRICT) = 1 AND LEN(TRANSIT_DISTRICT) >= 6 AND X_COORD_CD = TRANSIT_DISTRICT THEN LATITUDE
	WHEN X_COORD_CD IS NULL THEN NULL
	ELSE Y_COORD_CD END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- For distinct attributes:

SELECT
	DISTINCT(
	CASE
	WHEN ISNUMERIC(Y_COORD_CD) = 1 AND LEN(Y_COORD_CD) >= 6 AND X_COORD_CD = Y_COORD_CD THEN SUSP_AGE_GROUP
	WHEN ISNUMERIC(Y_COORD_CD) = 0 AND X_COORD_CD != Y_COORD_CD THEN SUSP_RACE
	WHEN ISNUMERIC(SUSP_RACE) = 1 AND LEN(SUSP_RACE) >= 6 AND X_COORD_CD = SUSP_RACE THEN SUSP_SEX
	WHEN ISNUMERIC(SUSP_SEX) = 1 AND LEN(SUSP_SEX) >= 6 AND X_COORD_CD = SUSP_SEX THEN TRANSIT_DISTRICT
	WHEN ISNUMERIC(TRANSIT_DISTRICT) = 1 AND LEN(TRANSIT_DISTRICT) >= 6 AND X_COORD_CD = TRANSIT_DISTRICT THEN LATITUDE
	WHEN X_COORD_CD IS NULL THEN NULL
	ELSE Y_COORD_CD END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- To filter:

SELECT
	*
FROM
	(
		SELECT
			CASE
			WHEN ISNUMERIC(Q.Y_COORD_CD) = 1 AND LEN(Q.Y_COORD_CD) >= 6 AND Q.X_COORD_CD = Q.Y_COORD_CD THEN Q.SUSP_AGE_GROUP
			WHEN ISNUMERIC(Q.SUSP_AGE_GROUP) = 1 AND LEN(Q.SUSP_AGE_GROUP) >= 6 AND Q.X_COORD_CD = Q.SUSP_AGE_GROUP THEN Q.SUSP_RACE
			WHEN ISNUMERIC(Q.SUSP_RACE) = 1 AND LEN(Q.SUSP_RACE) >= 6 AND Q.X_COORD_CD = Q.SUSP_RACE THEN Q.SUSP_SEX
			WHEN ISNUMERIC(Q.SUSP_SEX) = 1 AND LEN(Q.SUSP_SEX) >= 6 AND Q.X_COORD_CD = Q.SUSP_SEX THEN Q.TRANSIT_DISTRICT
			WHEN ISNUMERIC(Q.TRANSIT_DISTRICT) = 1 AND LEN(Q.TRANSIT_DISTRICT) >= 6 AND Q.X_COORD_CD = Q.TRANSIT_DISTRICT THEN Q.LATITUDE
			WHEN Q.X_COORD_CD IS NULL THEN NULL
			ELSE Q.Y_COORD_CD END AS CORRECT,
			P.*
		FROM
			PortfolioProject..NYPD_Complaint_Data_Historic AS Q
		JOIN
			PortfolioProject..NYPD_Complaint_Data_Historic AS P
		ON
	Q.CMPLNT_NUM = P.CMPLNT_NUM
	) dt
WHERE
	LEN(CORRECT) < 6;

--- Updating: 

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	Y_COORD_CD =
				CASE
				WHEN ISNUMERIC(Y_COORD_CD) = 1 AND LEN(Y_COORD_CD) >= 6 AND X_COORD_CD = Y_COORD_CD THEN SUSP_AGE_GROUP
				WHEN ISNUMERIC(SUSP_AGE_GROUP) = 1 AND LEN(SUSP_AGE_GROUP) >= 6 AND X_COORD_CD = SUSP_AGE_GROUP THEN SUSP_RACE
				WHEN ISNUMERIC(SUSP_RACE) = 1 AND LEN(SUSP_RACE) >= 6 AND X_COORD_CD = SUSP_RACE THEN SUSP_SEX
				WHEN ISNUMERIC(SUSP_SEX) = 1 AND LEN(SUSP_SEX) >= 6 AND X_COORD_CD = SUSP_SEX THEN TRANSIT_DISTRICT
				WHEN ISNUMERIC(TRANSIT_DISTRICT) = 1 AND LEN(TRANSIT_DISTRICT) >= 6 AND X_COORD_CD = TRANSIT_DISTRICT THEN LATITUDE
				WHEN X_COORD_CD IS NULL THEN NULL
				ELSE Y_COORD_CD END;

--- Using a CASE statement, I will extract the original attributes using SUSP_AGE_GROUP

SELECT
	DISTINCT(SUSP_AGE_GROUP)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

SELECT
	SUSP_AGE_GROUP,
	CASE
	WHEN ISNUMERIC(SUSP_AGE_GROUP) = 1 AND SUSP_AGE_GROUP = Y_COORD_CD AND SUSP_RACE = ' ' THEN NULL
	WHEN SUSP_AGE_GROUP = ' ' AND SUSP_RACE = SUSP_AGE_GROUP THEN NULL 
	WHEN SUSP_AGE_GROUP = ' ' AND SUSP_RACE = X_COORD_CD AND TRANSIT_DISTRICT = ' ' THEN NULL 
	WHEN SUSP_AGE_GROUP = ' ' AND SUSP_RACE LIKE '[A-Z]%'THEN NULL
	WHEN (LEN(SUSP_RACE) <= 5 AND ((SUSP_RACE LIKE '%-%' AND SUSP_RACE NOT LIKE '-%') OR SUSP_RACE LIKE '%<%' OR SUSP_RACE LIKE '%+%')) OR 
	(SUSP_RACE = 'UNKNOWN' AND (SUSP_AGE_GROUP = Y_COORD_CD AND SUSP_AGE_GROUP != ' ')) THEN SUSP_RACE
	WHEN (LEN(SUSP_SEX) <= 5 AND ((SUSP_SEX LIKE '%-%' AND SUSP_SEX NOT LIKE '-%') OR SUSP_SEX LIKE '%<%' OR SUSP_SEX LIKE '%+%')) OR 
	(SUSP_SEX = 'UNKNOWN' AND (SUSP_RACE = Y_COORD_CD AND SUSP_RACE != ' ')) THEN SUSP_SEX
	WHEN (LEN(TRANSIT_DISTRICT) <= 5 AND ((TRANSIT_DISTRICT LIKE '%-%' AND TRANSIT_DISTRICT NOT LIKE '-%') OR TRANSIT_DISTRICT LIKE '%<%' OR TRANSIT_DISTRICT LIKE '%+%')) OR 
	(TRANSIT_DISTRICT = 'UNKNOWN' AND (SUSP_SEX = Y_COORD_CD AND SUSP_SEX != ' ')) THEN TRANSIT_DISTRICT
	WHEN (LEN(Latitude) <= 5 AND ((Latitude LIKE '%-%' AND Latitude NOT LIKE '-%') OR Latitude LIKE '%<%' OR Latitude LIKE '%+%')) OR 
	(Latitude = 'UNKNOWN' AND (TRANSIT_DISTRICT = Y_COORD_CD AND TRANSIT_DISTRICT != ' ')) THEN Latitude
	ELSE SUSP_AGE_GROUP END AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;


--- To filter:
---- I encounted some attributes which didnt follow the alreday set parameters so i set them as NULL

SELECT
	*
FROM
	(
		SELECT
			CASE
			WHEN Q.SUSP_AGE_GROUP LIKE '-%' THEN NULL
			WHEN Q.SUSP_AGE_GROUP LIKE '%"' AND NOT Q.SUSP_AGE_GROUP LIKE '%)%' THEN Q.TRANSIT_DISTRICT
			WHEN Q.SUSP_AGE_GROUP LIKE '%"' AND Q.SUSP_AGE_GROUP LIKE '%)%' THEN Q.Latitude
			WHEN Q.SUSP_AGE_GROUP LIKE '"%' THEN Q.Latitude
			WHEN ISNUMERIC(Q.SUSP_AGE_GROUP) = 1 AND Q.SUSP_AGE_GROUP = Q.Y_COORD_CD AND Q.SUSP_RACE = ' ' THEN NULL
			WHEN ISNUMERIC(Q.SUSP_AGE_GROUP) = 1 AND Q.SUSP_AGE_GROUP = Q.Y_COORD_CD AND ISNUMERIC(Q.SUSP_RACE) = 1 AND LEN(Q.SUSP_RACE) = 4 THEN NULL
			WHEN ISNUMERIC(Q.SUSP_AGE_GROUP) = 1 AND Q.SUSP_AGE_GROUP = Q.X_COORD_CD AND Q.SUSP_SEX LIKE '-%' THEN NULL
			WHEN Q.SUSP_AGE_GROUP = ' ' AND Q.SUSP_RACE = Q.SUSP_AGE_GROUP THEN NULL 
			WHEN Q.SUSP_AGE_GROUP = ' ' AND Q.SUSP_RACE = Q.X_COORD_CD AND Q.TRANSIT_DISTRICT = ' ' THEN NULL 
			WHEN Q.SUSP_AGE_GROUP = ' ' AND Q.SUSP_RACE LIKE '[A-z]%' THEN NULL
			WHEN ISNUMERIC(Q.SUSP_RACE) = 1 AND Q.SUSP_RACE = Q.Y_COORD_CD AND Q.SUSP_SEX = ' ' THEN NULL
			WHEN ISNUMERIC(Q.SUSP_RACE) = 1 AND Q.SUSP_RACE = Q.X_COORD_CD AND Q.TRANSIT_DISTRICT = ' ' THEN NULL
			WHEN (LEN(Q.SUSP_RACE) <= 5 AND ((Q.SUSP_RACE LIKE '%-%' AND Q.SUSP_RACE NOT LIKE '-%') OR Q.SUSP_RACE LIKE '%<%' OR Q.SUSP_RACE LIKE '%+%')) OR 
			(Q.SUSP_RACE = 'UNKNOWN' AND (Q.SUSP_AGE_GROUP = Q.Y_COORD_CD AND Q.SUSP_AGE_GROUP != ' ')) THEN Q.SUSP_RACE
			WHEN (LEN(Q.SUSP_SEX) <= 5 AND ((Q.SUSP_SEX LIKE '%-%' AND Q.SUSP_SEX NOT LIKE '-%') OR Q.SUSP_SEX LIKE '%<%' OR Q.SUSP_SEX LIKE '%+%')) OR 
			(Q.SUSP_SEX = 'UNKNOWN' AND (Q.SUSP_RACE = Q.Y_COORD_CD AND Q.SUSP_RACE != ' ')) THEN Q.SUSP_SEX
			WHEN (LEN(Q.TRANSIT_DISTRICT) <= 5 AND ((Q.TRANSIT_DISTRICT LIKE '%-%' AND Q.TRANSIT_DISTRICT NOT LIKE '-%') OR Q.TRANSIT_DISTRICT LIKE '%<%' OR Q.TRANSIT_DISTRICT LIKE '%+%')) OR 
			(Q.TRANSIT_DISTRICT = 'UNKNOWN' AND (Q.SUSP_SEX = Q.Y_COORD_CD AND Q.SUSP_SEX != ' ')) THEN Q.TRANSIT_DISTRICT
			WHEN (LEN(Q.Latitude) <= 5 AND ((Q.Latitude LIKE '%-%' AND Q.Latitude NOT LIKE '-%') OR Q.Latitude LIKE '%<%' OR Q.Latitude LIKE '%+%')) OR 
			(Q.Latitude = 'UNKNOWN' AND (Q.TRANSIT_DISTRICT = Q.Y_COORD_CD AND Q.TRANSIT_DISTRICT != ' ')) THEN Q.Latitude
			ELSE Q.SUSP_AGE_GROUP END AS CORRECT,
			P.*
		FROM
			PortfolioProject..NYPD_Complaint_Data_Historic AS Q
		JOIN
			PortfolioProject..NYPD_Complaint_Data_Historic AS P
		ON
	Q.CMPLNT_NUM = P.CMPLNT_NUM
	) dt;

--- Updating: 

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	SUSP_AGE_GROUP = CASE
					WHEN SUSP_AGE_GROUP LIKE '-%' THEN NULL
					WHEN SUSP_AGE_GROUP LIKE '%"' AND NOT SUSP_AGE_GROUP LIKE '%)%' THEN TRANSIT_DISTRICT
					WHEN SUSP_AGE_GROUP LIKE '%"' AND SUSP_AGE_GROUP LIKE '%)%' THEN Latitude
					WHEN SUSP_AGE_GROUP LIKE '"%' THEN Latitude
					WHEN ISNUMERIC(SUSP_AGE_GROUP) = 1 AND SUSP_AGE_GROUP = Y_COORD_CD AND SUSP_RACE = ' ' THEN NULL
					WHEN ISNUMERIC(SUSP_AGE_GROUP) = 1 AND SUSP_AGE_GROUP = Y_COORD_CD AND ISNUMERIC(SUSP_RACE) = 1 AND LEN(SUSP_RACE) = 4 THEN NULL
					WHEN ISNUMERIC(SUSP_AGE_GROUP) = 1 AND SUSP_AGE_GROUP = X_COORD_CD AND SUSP_SEX LIKE '-%' THEN NULL
					WHEN SUSP_AGE_GROUP = ' ' AND SUSP_RACE = SUSP_AGE_GROUP THEN NULL 
					WHEN SUSP_AGE_GROUP = ' ' AND SUSP_RACE = X_COORD_CD AND TRANSIT_DISTRICT = ' ' THEN NULL 
					WHEN SUSP_AGE_GROUP = ' ' AND SUSP_RACE LIKE '[A-z]%' THEN NULL
					WHEN ISNUMERIC(SUSP_RACE) = 1 AND SUSP_RACE = Y_COORD_CD AND SUSP_SEX = ' ' THEN NULL
					WHEN ISNUMERIC(SUSP_RACE) = 1 AND SUSP_RACE = X_COORD_CD AND TRANSIT_DISTRICT = ' ' THEN NULL
					WHEN (LEN(SUSP_RACE) <= 5 AND ((SUSP_RACE LIKE '%-%' AND SUSP_RACE NOT LIKE '-%') OR SUSP_RACE LIKE '%<%' OR SUSP_RACE LIKE '%+%')) OR 
					(SUSP_RACE = 'UNKNOWN' AND (SUSP_AGE_GROUP = Y_COORD_CD AND SUSP_AGE_GROUP != ' ')) THEN SUSP_RACE
					WHEN (LEN(SUSP_SEX) <= 5 AND ((SUSP_SEX LIKE '%-%' AND SUSP_SEX NOT LIKE '-%') OR SUSP_SEX LIKE '%<%' OR SUSP_SEX LIKE '%+%')) OR 
					(SUSP_SEX = 'UNKNOWN' AND (SUSP_RACE = Y_COORD_CD AND SUSP_RACE != ' ')) THEN SUSP_SEX
					WHEN (LEN(TRANSIT_DISTRICT) <= 5 AND ((TRANSIT_DISTRICT LIKE '%-%' AND TRANSIT_DISTRICT NOT LIKE '-%') OR TRANSIT_DISTRICT LIKE '%<%' OR TRANSIT_DISTRICT LIKE '%+%')) OR 
					(TRANSIT_DISTRICT = 'UNKNOWN' AND (SUSP_SEX = Y_COORD_CD AND SUSP_SEX != ' ')) THEN TRANSIT_DISTRICT
					WHEN (LEN(Latitude) <= 5 AND ((Latitude LIKE '%-%' AND Latitude NOT LIKE '-%') OR Latitude LIKE '%<%' OR Latitude LIKE '%+%')) OR 
					(Latitude = 'UNKNOWN' AND (TRANSIT_DISTRICT = Y_COORD_CD AND TRANSIT_DISTRICT != ' ')) THEN Latitude
					ELSE SUSP_AGE_GROUP END

--- For confirmation:

SELECT
	SUSP_AGE_GROUP,
	COUNT(SUSP_AGE_GROUP) FREQ
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
GROUP BY
	SUSP_AGE_GROUP
ORDER BY 
	FREQ DESC;

--- I intend to set UNKNOWN, NA and ' ' all as NULL as I have asserted NULL will be appropriate

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	SUSP_AGE_GROUP = ' ' OR
	SUSP_AGE_GROUP = 'NA' OR
	SUSP_AGE_GROUP = 'UNKNOWN';

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	SUSP_AGE_GROUP = NULL
WHERE
	SUSP_AGE_GROUP = ' ' OR
	SUSP_AGE_GROUP = 'NA' OR
	SUSP_AGE_GROUP = 'UNKNOWN';

--- I will use DISTINCT to draw out any possible values for the CASE statement for SUSP_RACE

SELECT
	DISTINCT(SUSP_RACE),
	SUSP_SEX,
	TRANSIT_DISTRICT,
	Latitude,
	Lat_Lon,
	Longitude
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Using a CASE statement, I will extract the original attributes using SUSP_RACE

SELECT
	DISTINCT(
	CASE
	WHEN SUSP_RACE = SUSP_SEX AND SUSP_RACE = ' ' THEN NULL
	WHEN SUSP_RACE = ' ' AND SUSP_SEX LIKE '%[A-Z]%' AND SUSP_SEX != 'UNKNOWN' THEN SUSP_SEX
	WHEN SUSP_RACE = ' ' AND SUSP_SEX LIKE '%[A-Z]%' AND SUSP_SEX = 'UNKNOWN' THEN NULL
	WHEN SUSP_RACE = SUSP_AGE_GROUP AND SUSP_SEX != 'UNKNOWN' THEN SUSP_SEX
	WHEN SUSP_RACE = SUSP_AGE_GROUP AND SUSP_SEX = 'UNKNOWN' THEN NULL
	WHEN SUSP_RACE = SUSP_AGE_GROUP AND SUSP_SEX = ' ' THEN NULL
	WHEN SUSP_RACE = X_COORD_CD AND Latitude != 'UNKNOWN' THEN Latitude
	WHEN SUSP_RACE = X_COORD_CD AND Latitude = 'UNKNOWN' THEN NULL
	WHEN SUSP_RACE = X_COORD_CD AND Latitude = ' ' THEN NULL
	WHEN SUSP_RACE = Y_COORD_CD AND TRANSIT_DISTRICT != 'UNKNOWN' THEN TRANSIT_DISTRICT
	WHEN SUSP_RACE = Y_COORD_CD AND TRANSIT_DISTRICT = 'UNKNOWN' THEN NULL
	WHEN SUSP_RACE = Y_COORD_CD AND TRANSIT_DISTRICT = ' ' THEN NULL
	WHEN SUSP_RACE = SUSP_SEX AND SUSP_RACE = 'UNKNOWN' THEN NULL
	WHEN SUSP_RACE = 'UNKNOWN' AND TRANSIT_DISTRICT = ' ' THEN NULL
	WHEN SUSP_RACE = 'UNKNOWN' AND SUSP_AGE_GROUP IS NULL THEN SUSP_SEX
	WHEN SUSP_RACE LIKE '%"%' AND Longitude != 'UNKNOWN' THEN Longitude
	WHEN SUSP_RACE LIKE '%"%' AND Longitude = 'UNKNOWN' THEN NULL
	WHEN SUSP_RACE LIKE '%"%' AND Longitude = ' ' THEN NULL
	WHEN SUSP_RACE LIKE '-%' AND SUSP_SEX != 'UNKNOWN' THEN SUSP_SEX
	WHEN SUSP_RACE LIKE '-%' AND SUSP_SEX = 'UNKNOWN' THEN NULL
	WHEN SUSP_RACE LIKE '-%' AND SUSP_SEX = ' ' THEN NULL
	ELSE SUSP_RACE END) CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

---- I encounted some attributes which didnt follow the alreday set parameters so to inspect

SELECT
	DISTINCT(CORRECT)
FROM
	(
		SELECT
			CASE
			WHEN Q.SUSP_RACE = Q.SUSP_SEX AND Q.SUSP_RACE = ' ' THEN NULL
			WHEN Q.SUSP_RACE = ' ' AND Q.Longitude != ' ' THEN Q.Longitude
			WHEN Q.SUSP_RACE = Q.Longitude AND Q.SUSP_RACE = ' ' THEN NULL
			WHEN Q.SUSP_RACE = ' ' AND ISNUMERIC(Q.SUSP_SEX) = 0 AND Q.SUSP_SEX != 'UNKNOWN' THEN Q.SUSP_SEX
			WHEN Q.SUSP_RACE = ' ' AND ISNUMERIC(Q.SUSP_SEX) = 0 AND Q.SUSP_SEX = 'UNKNOWN' THEN NULL
			WHEN Q.SUSP_RACE = Q.SUSP_AGE_GROUP AND (Q.SUSP_SEX != 'UNKNOWN' AND Q.SUSP_SEX != ' ') THEN Q.SUSP_SEX
			WHEN Q.SUSP_RACE = Q.SUSP_AGE_GROUP AND Q.SUSP_SEX = 'UNKNOWN' THEN NULL
			WHEN Q.SUSP_RACE = Q.SUSP_AGE_GROUP AND Q.SUSP_SEX = ' ' THEN NULL
			WHEN Q.SUSP_RACE = Q.X_COORD_CD AND Q.X_COORD_CD != Q.Y_COORD_CD AND (Q.Latitude != 'UNKNOWN' AND Q.Latitude != ' ') THEN Q.Latitude
			WHEN Q.SUSP_RACE = Q.X_COORD_CD AND Q.X_COORD_CD != Q.Y_COORD_CD AND Q.Latitude = 'UNKNOWN' THEN NULL
			WHEN Q.SUSP_RACE = Q.X_COORD_CD AND Q.X_COORD_CD != Q.Y_COORD_CD AND Q.Latitude = ' ' THEN NULL
			WHEN Q.SUSP_RACE = Q.Y_COORD_CD AND Q.X_COORD_CD != Q.Y_COORD_CD AND (Q.TRANSIT_DISTRICT != 'UNKNOWN' AND Q.TRANSIT_DISTRICT != ' ') THEN Q.TRANSIT_DISTRICT
			WHEN Q.SUSP_RACE = Q.Y_COORD_CD AND Q.X_COORD_CD != Q.Y_COORD_CD AND Q.TRANSIT_DISTRICT = 'UNKNOWN' THEN NULL
			WHEN Q.SUSP_RACE = Q.Y_COORD_CD AND Q.X_COORD_CD != Q.Y_COORD_CD AND Q.TRANSIT_DISTRICT = ' ' THEN NULL
			WHEN Q.SUSP_RACE = Q.SUSP_SEX AND Q.SUSP_RACE = 'UNKNOWN' THEN NULL
			WHEN Q.SUSP_RACE = 'UNKNOWN' AND Q.TRANSIT_DISTRICT = ' ' THEN NULL
			WHEN Q.SUSP_RACE = 'UNKNOWN' AND Q.SUSP_AGE_GROUP IS NULL AND Q.SUSP_SEX = ' ' THEN NULL
			WHEN Q.SUSP_RACE = 'UNKNOWN' AND Q.SUSP_AGE_GROUP IS NULL AND LEN(Q.SUSP_SEX) = 1 THEN NULL
			WHEN Q.SUSP_RACE = Q.X_COORD_CD AND Q.X_COORD_CD = Q.Y_COORD_CD AND (Q.TRANSIT_DISTRICT != 'UNKNOWN' AND Q.TRANSIT_DISTRICT != ' ') THEN Q.TRANSIT_DISTRICT
			WHEN Q.SUSP_RACE = Q.X_COORD_CD AND Q.X_COORD_CD = Q.Y_COORD_CD AND Q.TRANSIT_DISTRICT = 'UNKNOWN' THEN NULL
			WHEN Q.SUSP_RACE = Q.X_COORD_CD AND Q.X_COORD_CD = Q.Y_COORD_CD AND Q.TRANSIT_DISTRICT = ' ' THEN NULL
			WHEN Q.SUSP_RACE = Q.X_COORD_CD AND Q.X_COORD_CD = Q.Y_COORD_CD AND Q.SUSP_SEX = Q.SUSP_RACE AND Q.Latitude = ' ' THEN NULL
			WHEN Q.SUSP_RACE = Q.X_COORD_CD AND Q.X_COORD_CD = Q.Y_COORD_CD AND Q.SUSP_SEX = Q.SUSP_RACE AND Q.Latitude != ' ' THEN Q.Latitude
			WHEN Q.SUSP_RACE LIKE '%"%' AND Q.Longitude != 'UNKNOWN' THEN Q.Longitude
			WHEN Q.SUSP_RACE LIKE '%"%' AND Q.Longitude = 'UNKNOWN' THEN NULL
			WHEN Q.SUSP_RACE LIKE '%"%' AND Q.Longitude = ' ' THEN NULL
			WHEN Q.SUSP_RACE LIKE '-%' AND Q.SUSP_SEX != 'UNKNOWN' THEN Q.SUSP_SEX
			WHEN Q.SUSP_RACE LIKE '-%' AND Q.SUSP_SEX = 'UNKNOWN' THEN NULL
			WHEN Q.SUSP_RACE LIKE '-%' AND Q.SUSP_SEX = ' ' THEN NULL
			ELSE Q.SUSP_RACE END AS CORRECT,
			P.*
		FROM
			PortfolioProject..NYPD_Complaint_Data_Historic AS Q
		JOIN
			PortfolioProject..NYPD_Complaint_Data_Historic AS P
		ON
	Q.CMPLNT_NUM = P.CMPLNT_NUM
	) dt;

--- Updating: 

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	SUSP_RACE = CASE
				WHEN SUSP_RACE = SUSP_SEX AND SUSP_RACE = ' ' THEN NULL
				WHEN SUSP_RACE = ' ' AND Longitude != ' ' THEN Longitude
				WHEN SUSP_RACE = Longitude AND SUSP_RACE = ' ' THEN NULL
				WHEN SUSP_RACE = ' ' AND ISNUMERIC(SUSP_SEX) = 0 AND SUSP_SEX != 'UNKNOWN' THEN SUSP_SEX
				WHEN SUSP_RACE = ' ' AND ISNUMERIC(SUSP_SEX) = 0 AND SUSP_SEX = 'UNKNOWN' THEN NULL
				WHEN SUSP_RACE = SUSP_AGE_GROUP AND (SUSP_SEX != 'UNKNOWN' AND SUSP_SEX != ' ') THEN SUSP_SEX
				WHEN SUSP_RACE = SUSP_AGE_GROUP AND SUSP_SEX = 'UNKNOWN' THEN NULL
				WHEN SUSP_RACE = SUSP_AGE_GROUP AND SUSP_SEX = ' ' THEN NULL
				WHEN SUSP_RACE = X_COORD_CD AND X_COORD_CD != Y_COORD_CD AND (Latitude != 'UNKNOWN' AND Latitude != ' ') THEN Latitude
				WHEN SUSP_RACE = X_COORD_CD AND X_COORD_CD != Y_COORD_CD AND Latitude = 'UNKNOWN' THEN NULL
				WHEN SUSP_RACE = X_COORD_CD AND X_COORD_CD != Y_COORD_CD AND Latitude = ' ' THEN NULL
				WHEN SUSP_RACE = Y_COORD_CD AND X_COORD_CD != Y_COORD_CD AND (TRANSIT_DISTRICT != 'UNKNOWN' AND TRANSIT_DISTRICT != ' ') THEN TRANSIT_DISTRICT
				WHEN SUSP_RACE = Y_COORD_CD AND X_COORD_CD != Y_COORD_CD AND TRANSIT_DISTRICT = 'UNKNOWN' THEN NULL
				WHEN SUSP_RACE = Y_COORD_CD AND X_COORD_CD != Y_COORD_CD AND TRANSIT_DISTRICT = ' ' THEN NULL
				WHEN SUSP_RACE = SUSP_SEX AND SUSP_RACE = 'UNKNOWN' THEN NULL
				WHEN SUSP_RACE = 'UNKNOWN' AND TRANSIT_DISTRICT = ' ' THEN NULL
				WHEN SUSP_RACE = 'UNKNOWN' AND SUSP_AGE_GROUP IS NULL AND SUSP_SEX = ' ' THEN NULL
				WHEN SUSP_RACE = 'UNKNOWN' AND SUSP_AGE_GROUP IS NULL AND LEN(SUSP_SEX) = 1 THEN NULL
				WHEN SUSP_RACE = X_COORD_CD AND X_COORD_CD = Y_COORD_CD AND (TRANSIT_DISTRICT != 'UNKNOWN' AND TRANSIT_DISTRICT != ' ') THEN TRANSIT_DISTRICT
				WHEN SUSP_RACE = X_COORD_CD AND X_COORD_CD = Y_COORD_CD AND TRANSIT_DISTRICT = 'UNKNOWN' THEN NULL
				WHEN SUSP_RACE = X_COORD_CD AND X_COORD_CD = Y_COORD_CD AND TRANSIT_DISTRICT = ' ' THEN NULL
				WHEN SUSP_RACE = X_COORD_CD AND X_COORD_CD = Y_COORD_CD AND SUSP_SEX = SUSP_RACE AND Latitude = ' ' THEN NULL
				WHEN SUSP_RACE = X_COORD_CD AND X_COORD_CD = Y_COORD_CD AND SUSP_SEX = SUSP_RACE AND Latitude != ' ' THEN Latitude
				WHEN SUSP_RACE LIKE '%"%' AND Longitude != 'UNKNOWN' THEN Longitude
				WHEN SUSP_RACE LIKE '%"%' AND Longitude = 'UNKNOWN' THEN NULL
				WHEN SUSP_RACE LIKE '%"%' AND Longitude = ' ' THEN NULL
				WHEN SUSP_RACE LIKE '-%' AND SUSP_SEX != 'UNKNOWN' THEN SUSP_SEX
				WHEN SUSP_RACE LIKE '-%' AND SUSP_SEX = 'UNKNOWN' THEN NULL
				WHEN SUSP_RACE LIKE '-%' AND SUSP_SEX = ' ' THEN NULL
				ELSE SUSP_RACE END;

--- I will use DISTINCT to draw out any possible values for the CASE statement for SUSP_SEX

SELECT
	DISTINCT(SUSP_SEX),
	TRANSIT_DISTRICT,
	Latitude,
	Longitude,
	Lat_Lon
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

SELECT
	DISTINCT(
	CASE
	WHEN SUSP_SEX = ' ' AND SUSP_SEX = TRANSIT_DISTRICT AND LEN(Latitude) >= 7 AND ISNUMERIC(Latitude) = 1 THEN NULL
	WHEN SUSP_SEX = ' ' AND SUSP_SEX = TRANSIT_DISTRICT AND Latitude = SUSP_RACE THEN NULL
	WHEN SUSP_SEX = ' ' AND SUSP_SEX = TRANSIT_DISTRICT AND Latitude = SUSP_RACE AND Longitude != ' ' THEN Longitude
	WHEN SUSP_SEX = ' ' AND SUSP_SEX = TRANSIT_DISTRICT AND Latitude = SUSP_RACE AND Longitude = ' ' THEN NULL
	WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = SUSP_AGE_GROUP AND Longitude != ' ' THEN Longitude
	WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = SUSP_AGE_GROUP AND Longitude = ' ' THEN NULL
	WHEN SUSP_SEX = ' ' AND LEN(Latitude) >= 7 AND ISNUMERIC(Latitude) = 1 THEN NULL
	WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = SUSP_RACE AND Latitude = ' ' THEN NULL
	WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = SUSP_RACE AND Latitude != ' ' THEN Latitude
	WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = Longitude AND Longitude = ' ' THEN NULL
	WHEN SUSP_SEX = SUSP_AGE_GROUP AND Latitude != ' ' THEN Latitude
	WHEN SUSP_SEX = SUSP_AGE_GROUP AND Latitude = ' ' THEN NULL
	WHEN SUSP_SEX = X_COORD_CD AND TRANSIT_DISTRICT = Y_COORD_CD AND Lat_Lon != ' ' THEN Lat_Lon
	WHEN SUSP_SEX = X_COORD_CD AND TRANSIT_DISTRICT = Y_COORD_CD AND Lat_Lon = ' ' THEN NULL
	WHEN SUSP_SEX = Y_COORD_CD AND Longitude = ' ' THEN NULL
	WHEN SUSP_SEX = Y_COORD_CD AND Longitude != ' ' THEN Longitude
	WHEN SUSP_SEX = SUSP_AGE_GROUP AND Latitude != ' ' THEN Latitude
	WHEN SUSP_SEX = SUSP_AGE_GROUP AND Latitude = ' ' THEN NULL
	WHEN SUSP_SEX = SUSP_RACE AND TRANSIT_DISTRICT = ' ' THEN NULL
	WHEN SUSP_SEX = SUSP_RACE AND TRANSIT_DISTRICT != ' ' THEN TRANSIT_DISTRICT
	WHEN SUSP_SEX = 'UNKNOWN' AND SUSP_AGE_GROUP IS NULL AND TRANSIT_DISTRICT = ' ' AND TRANSIT_DISTRICT = Latitude THEN NULL
	WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = SUSP_RACE AND Latitude != ' ' THEN Latitude
	WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = SUSP_RACE AND Latitude = ' ' THEN NULL
	WHEN SUSP_SEX = 'UNKNOWN' AND LEN(TRANSIT_DISTRICT) = 1 THEN TRANSIT_DISTRICT
	WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = SUSP_SEX AND Latitude != ' ' THEN Latitude
	WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = SUSP_SEX AND Latitude = ' ' THEN NULL
	WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = SUSP_RACE AND Latitude != ' ' THEN Latitude
	WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = SUSP_RACE AND Latitude = ' ' THEN NULL
	WHEN SUSP_SEX LIKE '-%' AND Latitude != ' ' THEN Latitude
	WHEN SUSP_SEX LIKE '-%' AND Latitude = ' ' THEN NULL
	ELSE SUSP_SEX END) CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- I query to find unaddressed attributes and updating the CASE statement:

SELECT
	DISTINCT(CORRECT)
FROM
	(
		SELECT
		CASE
		WHEN Q.SUSP_SEX = ' ' AND Q.SUSP_SEX = Q.TRANSIT_DISTRICT AND Q.Latitude = Q.Longitude AND Q.Latitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.SUSP_SEX = Q.TRANSIT_DISTRICT AND LEN(Q.Latitude) >= 7 AND ISNUMERIC(Q.Latitude) = 1 THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.SUSP_SEX = Q.TRANSIT_DISTRICT AND LEN(Q.Longitude) >= 7 AND ISNUMERIC(Q.Longitude) = 1 THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.SUSP_SEX = Q.TRANSIT_DISTRICT AND Q.Latitude = Q.SUSP_RACE THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.SUSP_SEX = Q.TRANSIT_DISTRICT AND Q.Latitude = Q.SUSP_SEX THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.SUSP_SEX = Q.TRANSIT_DISTRICT AND Q.Latitude = Q.SUSP_RACE AND Q.Longitude != ' ' THEN Q.Longitude
		WHEN Q.SUSP_SEX = ' ' AND Q.SUSP_SEX = Q.TRANSIT_DISTRICT AND Q.Latitude = Q.SUSP_RACE AND Q.Longitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.TRANSIT_DISTRICT = Q.SUSP_AGE_GROUP AND Q.Longitude != ' ' THEN Q.Longitude
		WHEN Q.SUSP_SEX = ' ' AND Q.TRANSIT_DISTRICT = Q.SUSP_AGE_GROUP AND Q.Longitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND LEN(Q.Latitude) >= 7 AND ISNUMERIC(Q.Latitude) = 1 THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.TRANSIT_DISTRICT = Q.SUSP_RACE AND Q.Latitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.TRANSIT_DISTRICT = Q.SUSP_RACE AND Q.Latitude != ' ' THEN Q.Latitude
		WHEN Q.SUSP_SEX = ' ' AND Q.TRANSIT_DISTRICT = 'UNKNOWN' AND Q.SUSP_RACE IS NULL AND Q.Latitude != ' ' THEN Q.Latitude
		WHEN Q.SUSP_SEX = ' ' AND Q.TRANSIT_DISTRICT = 'UNKNOWN' AND Q.Latitude = Q.Longitude AND Q.Longitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.TRANSIT_DISTRICT = 'UNKNOWN' AND Q.Latitude = Q.Longitude AND Q.Longitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.TRANSIT_DISTRICT = 'UNKNOWN' AND Q.Latitude = ' ' AND ISNUMERIC(Q.Longitude) = 1 THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.TRANSIT_DISTRICT = ' ' AND Q.Latitude = 'UNKNOWN' AND Q.Longitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.TRANSIT_DISTRICT = ' ' AND Q.Latitude = 'UNKNOWN' AND Q.Longitude != ' ' THEN Q.Longitude
		WHEN Q.SUSP_SEX = ' ' AND ISNUMERIC(Q.TRANSIT_DISTRICT) = 1 AND LEN(Q.TRANSIT_DISTRICT) < 3 THEN NULL
		WHEN Q.SUSP_SEX = ' ' AND Q.TRANSIT_DISTRICT = ' ' AND ISNUMERIC(Q.Latitude) = 1 AND LEN(Q.Latitude) < 3 THEN NULL
		WHEN Q.SUSP_SEX = Q.SUSP_AGE_GROUP AND Q.Latitude != ' ' THEN Q.Latitude
		WHEN Q.SUSP_SEX = Q.SUSP_AGE_GROUP AND Q.Latitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = Q.X_COORD_CD AND Q.TRANSIT_DISTRICT = Q.Y_COORD_CD AND Q.Lat_Lon != ' ' THEN Q.Lat_Lon
		WHEN Q.SUSP_SEX = Q.X_COORD_CD AND Q.TRANSIT_DISTRICT = Q.Y_COORD_CD AND Q.Lat_Lon = ' ' THEN NULL
		WHEN Q.SUSP_SEX = Q.Y_COORD_CD AND Q.Longitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = Q.Y_COORD_CD AND Q.Longitude != ' ' THEN Q.Longitude
		WHEN Q.SUSP_SEX = Q.SUSP_AGE_GROUP AND Q.Latitude != ' ' THEN Q.Latitude
		WHEN Q.SUSP_SEX = Q.SUSP_AGE_GROUP AND Q.Latitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = Q.SUSP_RACE AND Q.TRANSIT_DISTRICT = ' ' THEN NULL
		WHEN Q.SUSP_SEX = Q.SUSP_RACE AND Q.TRANSIT_DISTRICT != ' ' THEN Q.TRANSIT_DISTRICT
		WHEN Q.SUSP_SEX = 'UNKNOWN' AND Q.SUSP_AGE_GROUP IS NULL AND Q.TRANSIT_DISTRICT = ' ' AND Q.TRANSIT_DISTRICT = Q.Latitude THEN NULL
		WHEN Q.SUSP_SEX = 'UNKNOWN' AND Q.TRANSIT_DISTRICT = Q.SUSP_RACE AND Q.Latitude != ' ' THEN Q.Latitude
		WHEN Q.SUSP_SEX = 'UNKNOWN' AND Q.TRANSIT_DISTRICT = Q.SUSP_RACE AND Q.Latitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = 'UNKNOWN' AND LEN(Q.TRANSIT_DISTRICT) = 1 THEN Q.TRANSIT_DISTRICT
		WHEN Q.SUSP_SEX = 'UNKNOWN' AND Q.TRANSIT_DISTRICT = Q.SUSP_SEX AND Q.Latitude != ' ' THEN Q.Latitude
		WHEN Q.SUSP_SEX = 'UNKNOWN' AND Q.TRANSIT_DISTRICT = Q.SUSP_SEX AND Q.Latitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = 'UNKNOWN' AND Q.TRANSIT_DISTRICT = Q.SUSP_RACE AND Q.Latitude != ' ' THEN Q.Latitude
		WHEN Q.SUSP_SEX = 'UNKNOWN' AND Q.TRANSIT_DISTRICT = Q.SUSP_RACE AND Q.Latitude = ' ' THEN NULL
		WHEN Q.SUSP_SEX = 'UNKNOWN' AND Q.TRANSIT_DISTRICT = ' ' AND (ISNUMERIC (Q.Latitude) = 1 AND LEN(Q.Latitude) < 3) OR (Q.Latitude = ' ') THEN NULL
		WHEN Q.SUSP_SEX LIKE '-%' AND Q.Latitude != ' ' THEN Q.Latitude
		WHEN Q.SUSP_SEX LIKE '-%' AND Q.Latitude = ' ' THEN NULL
		ELSE Q.SUSP_SEX END AS CORRECT,
		P.*
		FROM
			PortfolioProject..NYPD_Complaint_Data_Historic AS Q
		JOIN
			PortfolioProject..NYPD_Complaint_Data_Historic AS P
		ON
	Q.CMPLNT_NUM = P.CMPLNT_NUM
	) dt;

---Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	SUSP_SEX = 
			CASE
			WHEN SUSP_SEX = ' ' AND SUSP_SEX = TRANSIT_DISTRICT AND Latitude = Longitude AND Latitude = ' ' THEN NULL
			WHEN SUSP_SEX = ' ' AND SUSP_SEX = TRANSIT_DISTRICT AND LEN(Latitude) >= 7 AND ISNUMERIC(Latitude) = 1 THEN NULL
			WHEN SUSP_SEX = ' ' AND SUSP_SEX = TRANSIT_DISTRICT AND LEN(Longitude) >= 7 AND ISNUMERIC(Longitude) = 1 THEN NULL
			WHEN SUSP_SEX = ' ' AND SUSP_SEX = TRANSIT_DISTRICT AND Latitude = SUSP_RACE THEN NULL
			WHEN SUSP_SEX = ' ' AND SUSP_SEX = TRANSIT_DISTRICT AND Latitude = SUSP_SEX THEN NULL
			WHEN SUSP_SEX = ' ' AND SUSP_SEX = TRANSIT_DISTRICT AND Latitude = SUSP_RACE AND Longitude != ' ' THEN Longitude
			WHEN SUSP_SEX = ' ' AND SUSP_SEX = TRANSIT_DISTRICT AND Latitude = SUSP_RACE AND Longitude = ' ' THEN NULL
			WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = SUSP_AGE_GROUP AND Longitude != ' ' THEN Longitude
			WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = SUSP_AGE_GROUP AND Longitude = ' ' THEN NULL
			WHEN SUSP_SEX = ' ' AND LEN(Latitude) >= 7 AND ISNUMERIC(Latitude) = 1 THEN NULL
			WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = SUSP_RACE AND Latitude = ' ' THEN NULL
			WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = SUSP_RACE AND Latitude != ' ' THEN Latitude
			WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = 'UNKNOWN' AND SUSP_RACE IS NULL AND Latitude != ' ' THEN Latitude
			WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = Longitude AND Longitude = ' ' THEN NULL
			WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = Longitude AND Longitude = ' ' THEN NULL
			WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = ' ' AND ISNUMERIC(Longitude) = 1 THEN NULL
			WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = ' ' AND Latitude = 'UNKNOWN' AND Longitude = ' ' THEN NULL
			WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = ' ' AND Latitude = 'UNKNOWN' AND Longitude != ' ' THEN Longitude
			WHEN SUSP_SEX = ' ' AND ISNUMERIC(TRANSIT_DISTRICT) = 1 AND LEN(TRANSIT_DISTRICT) < 3 THEN NULL
			WHEN SUSP_SEX = ' ' AND TRANSIT_DISTRICT = ' ' AND ISNUMERIC(Latitude) = 1 AND LEN(Latitude) < 3 THEN NULL
			WHEN SUSP_SEX = SUSP_AGE_GROUP AND Latitude != ' ' THEN Latitude
			WHEN SUSP_SEX = SUSP_AGE_GROUP AND Latitude = ' ' THEN NULL
			WHEN SUSP_SEX = X_COORD_CD AND TRANSIT_DISTRICT = Y_COORD_CD AND Lat_Lon != ' ' THEN Lat_Lon
			WHEN SUSP_SEX = X_COORD_CD AND TRANSIT_DISTRICT = Y_COORD_CD AND Lat_Lon = ' ' THEN NULL
			WHEN SUSP_SEX = Y_COORD_CD AND Longitude = ' ' THEN NULL
			WHEN SUSP_SEX = Y_COORD_CD AND Longitude != ' ' THEN Longitude
			WHEN SUSP_SEX = SUSP_AGE_GROUP AND Latitude != ' ' THEN Latitude
			WHEN SUSP_SEX = SUSP_AGE_GROUP AND Latitude = ' ' THEN NULL
			WHEN SUSP_SEX = SUSP_RACE AND TRANSIT_DISTRICT = ' ' THEN NULL
			WHEN SUSP_SEX = SUSP_RACE AND TRANSIT_DISTRICT != ' ' THEN TRANSIT_DISTRICT	
			WHEN SUSP_SEX = 'UNKNOWN' AND SUSP_AGE_GROUP IS NULL AND TRANSIT_DISTRICT = ' ' AND TRANSIT_DISTRICT = Latitude THEN NULL
			WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = SUSP_RACE AND Latitude != ' ' THEN Latitude
			WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = SUSP_RACE AND Latitude = ' ' THEN NULL
			WHEN SUSP_SEX = 'UNKNOWN' AND LEN(TRANSIT_DISTRICT) = 1 THEN TRANSIT_DISTRICT
			WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = SUSP_SEX AND Latitude != ' ' THEN Latitude
			WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = SUSP_SEX AND Latitude = ' ' THEN NULL
			WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = SUSP_RACE AND Latitude != ' ' THEN Latitude
			WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = SUSP_RACE AND Latitude = ' ' THEN NULL
			WHEN SUSP_SEX = 'UNKNOWN' AND TRANSIT_DISTRICT = ' ' AND (ISNUMERIC (Latitude) = 1 AND LEN(Latitude) < 3) OR (Latitude = ' ') THEN NULL
			WHEN SUSP_SEX LIKE '-%' AND Latitude != ' ' THEN Latitude
			WHEN SUSP_SEX LIKE '-%' AND Latitude = ' ' THEN NULL
			ELSE SUSP_SEX END;

--- I will use DISTINCT to draw out any possible values for the CASE statement for TRANSIT_DISTRICT

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

SELECT
	DISTINCT(TRANSIT_DISTRICT),
	Latitude,
	Longitude,
	Lat_Lon,
	PATROL_BORO
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

SELECT
	DISTINCT(
	CASE
	WHEN TRANSIT_DISTRICT = ' ' AND Latitude = ' ' AND Longitude = TRANSIT_DISTRICT AND Lat_Lon = Latitude THEN NULL
	WHEN TRANSIT_DISTRICT = ' ' AND Latitude = ' ' AND Longitude = TRANSIT_DISTRICT THEN NULL
	WHEN TRANSIT_DISTRICT = ' ' AND Latitude = ' ' AND ISNUMERIC(Longitude) = 1 AND LEN(Longitude) <= 3 THEN Longitude
	WHEN TRANSIT_DISTRICT = ' ' AND Latitude = ' ' AND ISNUMERIC(Longitude) = 1 AND LEN(Longitude) > 3 THEN NULL
	WHEN TRANSIT_DISTRICT = ' ' AND ISNUMERIC(Latitude) = 1 AND LEN(Latitude) <= 3 THEN Latitude
	WHEN TRANSIT_DISTRICT = ' ' AND ISNUMERIC(Latitude) = 1 AND LEN(Latitude) > 3 THEN NULL
	WHEN TRANSIT_DISTRICT = ' ' AND Latitude = SUSP_RACE AND Lat_Lon = ' ' THEN NULL
	WHEN TRANSIT_DISTRICT = ' ' AND Latitude = SUSP_RACE AND Lat_Lon != ' ' THEN Lat_Lon
	WHEN TRANSIT_DISTRICT = ' ' AND Latitude = 'UNKNOWN' AND Longitude = TRANSIT_DISTRICT AND Lat_Lon = ' ' THEN NULL
	WHEN TRANSIT_DISTRICT = ' ' AND Latitude = 'UNKNOWN' AND Longitude = TRANSIT_DISTRICT AND Lat_Lon != ' ' THEN Lat_Lon
	WHEN TRANSIT_DISTRICT = ' ' AND Latitude = 'UNKNOWN' AND Longitude = SUSP_SEX AND Lat_Lon = ' ' THEN NULL
	WHEN TRANSIT_DISTRICT = ' ' AND Latitude = 'UNKNOWN' AND Longitude = SUSP_SEX AND Lat_Lon != ' ' THEN Lat_Lon
	WHEN TRANSIT_DISTRICT = SUSP_AGE_GROUP AND Lat_Lon = ' ' THEN NULL
	WHEN TRANSIT_DISTRICT = SUSP_AGE_GROUP AND Lat_Lon != ' ' THEN Lat_Lon
	WHEN TRANSIT_DISTRICT = Y_COORD_CD AND PATROL_BORO = ' '  THEN NULL
	WHEN TRANSIT_DISTRICT = Y_COORD_CD AND PATROL_BORO != ' '  THEN PATROL_BORO
	WHEN TRANSIT_DISTRICT LIKE '-%' AND Lat_Lon = ' ' THEN NULL
	WHEN TRANSIT_DISTRICT LIKE '-%' AND Lat_Lon != ' ' THEN Lat_Lon
	WHEN ISNUMERIC(TRANSIT_DISTRICT) = 1 AND LEN(TRANSIT_DISTRICT) >= 3 AND Lat_Lon = ' ' THEN NULL
	WHEN ISNUMERIC(TRANSIT_DISTRICT) = 1 AND LEN(TRANSIT_DISTRICT) >= 3 AND Lat_Lon != ' ' THEN Lat_Lon
	WHEN TRANSIT_DISTRICT = SUSP_RACE AND Longitude = ' ' THEN NULL
	WHEN TRANSIT_DISTRICT = SUSP_RACE AND Longitude != ' ' THEN Longitude
	WHEN TRANSIT_DISTRICT = SUSP_SEX AND Latitude != ' ' THEN Latitude
	WHEN TRANSIT_DISTRICT = SUSP_SEX AND Latitude = ' ' THEN NULL
	WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = Longitude AND Latitude = ' ' THEN NULL
	WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = ' ' AND ISNUMERIC(Longitude) = 1 AND LEN(Longitude) <= 3 THEN Longitude
	WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = SUSP_RACE AND Lat_Lon = ' ' THEN NULL
	WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = SUSP_RACE AND Lat_Lon != ' ' THEN Lat_Lon
	WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = SUSP_SEX AND Longitude = ' ' THEN NULL
	WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = SUSP_SEX AND Longitude != ' ' THEN Longitude
	WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = TRANSIT_DISTRICT AND Lat_Lon = ' ' THEN NULL
	WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = TRANSIT_DISTRICT AND Lat_Lon != ' ' THEN Lat_Lon
	ELSE TRANSIT_DISTRICT END) CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;


--- I query to find unaddressed attributes and updating the CASE statement:

SELECT
	*
FROM
	(
		SELECT
		CASE
		WHEN Q.TRANSIT_DISTRICT = ' ' AND Q.Latitude = ' ' AND Q.Longitude = Q.TRANSIT_DISTRICT AND Q.Lat_Lon = Q.Latitude THEN NULL
		WHEN Q.TRANSIT_DISTRICT = ' ' AND Q.Latitude = ' ' AND Q.Longitude = Q.TRANSIT_DISTRICT THEN NULL
		WHEN Q.TRANSIT_DISTRICT = ' ' AND Q.Latitude = ' ' AND ISNUMERIC(Q.Longitude) = 1 AND LEN(Q.Longitude) <= 3 THEN Q.Longitude
		WHEN Q.TRANSIT_DISTRICT = ' ' AND Q.Latitude = ' ' AND ISNUMERIC(Q.Longitude) = 1 AND LEN(Q.Longitude) > 3 THEN NULL
		WHEN Q.TRANSIT_DISTRICT = ' ' AND ISNUMERIC(Q.Latitude) = 1 AND LEN(Q.Latitude) <= 3 THEN Q.Latitude
		WHEN Q.TRANSIT_DISTRICT = ' ' AND ISNUMERIC(Q.Latitude) = 1 AND LEN(Q.Latitude) > 3 THEN NULL
		WHEN Q.TRANSIT_DISTRICT = ' ' AND Q.Latitude = Q.SUSP_RACE AND Q.Lat_Lon = ' ' THEN NULL
		WHEN Q.TRANSIT_DISTRICT = ' ' AND Q.Latitude = Q.SUSP_RACE AND Q.Lat_Lon != ' ' THEN Q.Lat_Lon
		WHEN Q.TRANSIT_DISTRICT = ' ' AND Q.Latitude = 'UNKNOWN' AND Q.Longitude = Q.TRANSIT_DISTRICT AND Q.Lat_Lon = ' ' THEN NULL
		WHEN Q.TRANSIT_DISTRICT = ' ' AND Q.Latitude = 'UNKNOWN' AND Q.Longitude = Q.TRANSIT_DISTRICT AND Q.Lat_Lon != ' ' THEN Q.Lat_Lon
		WHEN Q.TRANSIT_DISTRICT = ' ' AND Q.Latitude = 'UNKNOWN' AND Q.Longitude = Q.SUSP_SEX AND Q.Lat_Lon = ' ' THEN NULL
		WHEN Q.TRANSIT_DISTRICT = ' ' AND Q.Latitude = 'UNKNOWN' AND Q.Longitude = Q.SUSP_SEX AND Q.Lat_Lon != ' ' THEN Q.Lat_Lon
		WHEN Q.TRANSIT_DISTRICT = Q.SUSP_AGE_GROUP AND Q.Lat_Lon = ' ' THEN NULL
		WHEN Q.TRANSIT_DISTRICT = Q.SUSP_AGE_GROUP AND Q.Lat_Lon != ' ' THEN Q.Lat_Lon
		WHEN Q.TRANSIT_DISTRICT = Q.Y_COORD_CD AND Q.PATROL_BORO = ' '  THEN NULL
		WHEN Q.TRANSIT_DISTRICT = Q.Y_COORD_CD AND Q.PATROL_BORO != ' '  THEN Q.PATROL_BORO
		WHEN Q.TRANSIT_DISTRICT LIKE '-%' AND Q.Lat_Lon != ' ' THEN Q.Lat_Lon
		WHEN Q.TRANSIT_DISTRICT LIKE '-%' AND Q.Lat_Lon = ' ' THEN Q.Lat_Lon
		WHEN ISNUMERIC(Q.TRANSIT_DISTRICT) = 1 AND LEN(Q.TRANSIT_DISTRICT) >= 3 AND Q.Lat_Lon = ' ' THEN NULL
		WHEN ISNUMERIC(Q.TRANSIT_DISTRICT) = 1 AND LEN(Q.TRANSIT_DISTRICT) >= 3 AND Q.Lat_Lon != ' ' THEN Q.Lat_Lon
		WHEN Q.TRANSIT_DISTRICT = Q.SUSP_RACE AND Q.Longitude = ' ' THEN NULL
		WHEN Q.TRANSIT_DISTRICT = Q.SUSP_RACE AND Q.Longitude != ' ' THEN Q.Longitude
		WHEN Q.TRANSIT_DISTRICT = Q.SUSP_SEX AND Q.Latitude != ' ' THEN Q.Latitude
		WHEN Q.TRANSIT_DISTRICT = Q.SUSP_SEX AND Q.Latitude = ' ' THEN NULL
		WHEN Q.TRANSIT_DISTRICT = 'UNKNOWN' AND Q.Latitude = Q.Longitude AND Q.Latitude = ' ' THEN NULL
		WHEN Q.TRANSIT_DISTRICT = 'UNKNOWN' AND Q.Latitude = ' ' AND ISNUMERIC(Q.Longitude) = 1 AND LEN(Q.Longitude) <= 3 THEN Q.Longitude
		WHEN Q.TRANSIT_DISTRICT = 'UNKNOWN' AND Q.Latitude = Q.SUSP_RACE AND Q.Lat_Lon = ' ' THEN NULL
		WHEN Q.TRANSIT_DISTRICT = 'UNKNOWN' AND Q.Latitude = Q.SUSP_RACE AND Q.Lat_Lon != ' ' THEN Q.Lat_Lon
		WHEN Q.TRANSIT_DISTRICT = 'UNKNOWN' AND Q.Latitude = Q.SUSP_SEX AND Q.Longitude = ' ' THEN NULL
		WHEN Q.TRANSIT_DISTRICT = 'UNKNOWN' AND Q.Latitude = Q.SUSP_SEX AND Q.Longitude != ' ' THEN Q.Longitude
		WHEN Q.TRANSIT_DISTRICT = 'UNKNOWN' AND Q.Latitude = Q.TRANSIT_DISTRICT AND Q.Lat_Lon = ' ' THEN NULL
		WHEN Q.TRANSIT_DISTRICT = 'UNKNOWN' AND Q.Latitude = Q.TRANSIT_DISTRICT AND Q.Lat_Lon != ' ' THEN Q.Lat_Lon
		ELSE Q.TRANSIT_DISTRICT END AS CORRECT,
		P.*
		FROM
			PortfolioProject..NYPD_Complaint_Data_Historic AS Q
		JOIN
			PortfolioProject..NYPD_Complaint_Data_Historic AS P
		ON
	Q.CMPLNT_NUM = P.CMPLNT_NUM
	) dt;

---Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	TRANSIT_DISTRICT = 
						CASE
						WHEN TRANSIT_DISTRICT = ' ' AND Latitude = ' ' AND Longitude = TRANSIT_DISTRICT AND Lat_Lon = Latitude THEN NULL
						WHEN TRANSIT_DISTRICT = ' ' AND Latitude = ' ' AND Longitude = TRANSIT_DISTRICT THEN NULL
						WHEN TRANSIT_DISTRICT = ' ' AND Latitude = ' ' AND ISNUMERIC(Longitude) = 1 AND LEN(Longitude) <= 3 THEN Longitude
						WHEN TRANSIT_DISTRICT = ' ' AND Latitude = ' ' AND ISNUMERIC(Longitude) = 1 AND LEN(Longitude) > 3 THEN NULL
						WHEN TRANSIT_DISTRICT = ' ' AND ISNUMERIC(Latitude) = 1 AND LEN(Latitude) <= 3 THEN Latitude
						WHEN TRANSIT_DISTRICT = ' ' AND ISNUMERIC(Latitude) = 1 AND LEN(Latitude) > 3 THEN NULL
						WHEN TRANSIT_DISTRICT = ' ' AND Latitude = SUSP_RACE AND Lat_Lon = ' ' THEN NULL
						WHEN TRANSIT_DISTRICT = ' ' AND Latitude = SUSP_RACE AND Lat_Lon != ' ' THEN Lat_Lon
						WHEN TRANSIT_DISTRICT = ' ' AND Latitude = 'UNKNOWN' AND Longitude = TRANSIT_DISTRICT AND Lat_Lon = ' ' THEN NULL
						WHEN TRANSIT_DISTRICT = ' ' AND Latitude = 'UNKNOWN' AND Longitude = TRANSIT_DISTRICT AND Lat_Lon != ' ' THEN Lat_Lon
						WHEN TRANSIT_DISTRICT = ' ' AND Latitude = 'UNKNOWN' AND Longitude = SUSP_SEX AND Lat_Lon = ' ' THEN NULL
						WHEN TRANSIT_DISTRICT = ' ' AND Latitude = 'UNKNOWN' AND Longitude = SUSP_SEX AND Lat_Lon != ' ' THEN Lat_Lon
						WHEN TRANSIT_DISTRICT = SUSP_AGE_GROUP AND Lat_Lon = ' ' THEN NULL
						WHEN TRANSIT_DISTRICT = SUSP_AGE_GROUP AND Lat_Lon != ' ' THEN Lat_Lon
						WHEN TRANSIT_DISTRICT = Y_COORD_CD AND PATROL_BORO = ' '  THEN NULL
						WHEN TRANSIT_DISTRICT = Y_COORD_CD AND PATROL_BORO != ' '  THEN PATROL_BORO
						WHEN TRANSIT_DISTRICT LIKE '-%' AND Lat_Lon = ' ' THEN NULL
						WHEN TRANSIT_DISTRICT LIKE '-%' AND Lat_Lon != ' ' THEN Lat_Lon
						WHEN ISNUMERIC(TRANSIT_DISTRICT) = 1 AND LEN(TRANSIT_DISTRICT) >= 3 AND Lat_Lon = ' ' THEN NULL
						WHEN ISNUMERIC(TRANSIT_DISTRICT) = 1 AND LEN(TRANSIT_DISTRICT) >= 3 AND Lat_Lon != ' ' THEN Lat_Lon
						WHEN TRANSIT_DISTRICT = SUSP_RACE AND Longitude = ' ' THEN NULL
						WHEN TRANSIT_DISTRICT = SUSP_RACE AND Longitude != ' ' THEN Longitude
						WHEN TRANSIT_DISTRICT = SUSP_SEX AND Latitude != ' ' THEN Latitude
						WHEN TRANSIT_DISTRICT = SUSP_SEX AND Latitude = ' ' THEN NULL
						WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = Longitude AND Latitude = ' ' THEN NULL
						WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = ' ' AND ISNUMERIC(Longitude) = 1 AND LEN(Longitude) <= 3 THEN Longitude
						WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = SUSP_RACE AND Lat_Lon = ' ' THEN NULL
						WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = SUSP_RACE AND Lat_Lon != ' ' THEN Lat_Lon
						WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = SUSP_SEX AND Longitude = ' ' THEN NULL
						WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = SUSP_SEX AND Longitude != ' ' THEN Longitude
						WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = TRANSIT_DISTRICT AND Lat_Lon = ' ' THEN NULL
						WHEN TRANSIT_DISTRICT = 'UNKNOWN' AND Latitude = TRANSIT_DISTRICT AND Lat_Lon != ' ' THEN Lat_Lon
						ELSE TRANSIT_DISTRICT END;


--- Latitude has some attributes exceeding the pattern of DECIMAL(10,8). Rectifying:

SELECT
	Latitude,
	ROUND(Latitude, 10) CORRECTED
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	LEN(Latitude) > 12;

--- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	Latitude = ROUND(Latitude, 10)
WHERE
	LEN(Latitude) > 12;

--- I will use DISTINCT to draw out any possible values for the CASE statement for Latitude

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

SELECT
	DISTINCT(SUBSTRING(Latitude, 1, 5)) AS Latitude,
	SUBSTRING(Longitude, 1, 5) AS Longitude,
	SUBSTRING(Lat_Lon, 1, 5)AS Lat_Lon,
	SUBSTRING(PATROL_BORO, 1, 5)AS PATROL_BORO,
	SUBSTRING(STATION_NAME, 1, 5)AS STATION_NAME
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
ORDER BY
	Latitude, 
	Longitude,
	Lat_Lon,
	PATROL_BORO,
	STATION_NAME;

SELECT
	DISTINCT(
	LEFT(
	CASE
	WHEN Latitude = ' ' AND Longitude = ' ' AND Lat_Lon = Latitude AND Longitude = PATROL_BORO AND STATION_NAME = ' ' THEN NULL
	WHEN Latitude = ' ' AND Longitude = ' ' AND Lat_Lon = Latitude AND Longitude = PATROL_BORO AND ISNUMERIC(STATION_NAME) = 1 AND LEN(STATION_NAME) > 5 THEN STATION_NAME
	WHEN Latitude = ' ' AND Longitude = ' ' AND Lat_Lon = Latitude AND Longitude = PATROL_BORO AND ISNUMERIC(STATION_NAME) = 0 THEN NULL
	WHEN Latitude = ' ' AND Longitude = ' ' AND Lat_Lon = Longitude AND ISNUMERIC(PATROL_BORO) = 1 AND LEN(PATROL_BORO) > 5 THEN PATROL_BORO
	WHEN Latitude = ' ' AND Longitude = ' ' AND Lat_Lon = Longitude AND ISNUMERIC(PATROL_BORO) = 0 THEN NULL
	WHEN Latitude = ' ' AND Longitude = ' ' AND Lat_Lon = TRANSIT_DISTRICT AND ISNUMERIC(PATROL_BORO) = 1 AND LEN(PATROL_BORO) > 5 THEN PATROL_BORO
	WHEN Latitude = ' ' AND Longitude = Latitude AND ISNUMERIC(Lat_Lon) = 1 AND LEN(Lat_Lon) > 5 THEN Lat_Lon
	WHEN Latitude = ' ' AND Longitude = Latitude AND ISNUMERIC(Lat_Lon) = 1 AND LEN(Lat_Lon) <= 3 THEN PATROL_BORO
	WHEN Latitude = ' ' AND Longitude = TRANSIT_DISTRICT AND ISNUMERIC(Lat_Lon) = 1 AND LEN(Lat_Lon) > 5 THEN Lat_Lon
	WHEN Latitude = ' ' AND Longitude = TRANSIT_DISTRICT AND Lat_Lon = ' ' THEN NULL
	WHEN Latitude = ' ' AND ISNUMERIC(Longitude) = 1 AND LEN(Longitude) > 5 THEN Longitude
	WHEN Latitude = SUSP_AGE_GROUP AND STATION_NAME = ' ' THEN NULL
	WHEN Latitude = SUSP_AGE_GROUP AND ISNUMERIC(STATION_NAME) = 1 AND LEN(STATION_NAME) > 5 THEN STATION_NAME
	WHEN Latitude = TRANSIT_DISTRICT AND ISNUMERIC(Longitude) = 1 AND LEN(Longitude) > 5 THEN Longitude
	WHEN Latitude = TRANSIT_DISTRICT AND Longitude = ' ' THEN NULL
	WHEN Latitude = SUSP_RACE AND ISNUMERIC(PATROL_BORO) = 1 AND LEN(PATROL_BORO) > 5 THEN PATROL_BORO
	WHEN Latitude = SUSP_RACE AND PATROL_BORO = ' ' THEN NULL
	WHEN Latitude = SUSP_SEX AND ISNUMERIC(Lat_Lon) = 1 AND LEN(Lat_Lon) > 5 THEN Lat_Lon
	WHEN Latitude = SUSP_SEX AND Lat_Lon = ' ' THEN NULL
	WHEN Latitude = 'UNKNOWN' AND Longitude = ' ' AND Longitude = Lat_Lon AND PATROL_BORO = ' ' THEN NULL
	WHEN Latitude = 'UNKNOWN' AND Longitude = ' ' AND Longitude = Lat_Lon AND ISNUMERIC(PATROL_BORO) = 1 AND LEN(PATROL_BORO) > 5 THEN PATROL_BORO
	WHEN Latitude = 'UNKNOWN' AND Longitude = ' ' AND TRANSIT_DISTRICT = Lat_Lon AND ISNUMERIC(PATROL_BORO) = 1 AND LEN(PATROL_BORO) > 5 THEN PATROL_BORO
	WHEN Latitude = 'UNKNOWN' AND Longitude = SUSP_RACE AND ISNUMERIC(STATION_NAME) = 1 AND LEN(STATION_NAME) > 5 THEN STATION_NAME
	WHEN Latitude = 'UNKNOWN' AND Longitude = SUSP_SEX AND ISNUMERIC(PATROL_BORO) = 1 AND LEN(PATROL_BORO) > 5 THEN PATROL_BORO
	WHEN Latitude = 'UNKNOWN' AND Longitude = SUSP_SEX AND PATROL_BORO = ' ' THEN NULL
	WHEN Latitude = 'UNKNOWN' AND Longitude = Latitude AND ISNUMERIC(STATION_NAME) = 1 AND LEN(STATION_NAME) > 5 THEN STATION_NAME
	ELSE Latitude END, 5) ) CORRECT

FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

---Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	Latitude = 
				CASE
				WHEN Latitude = ' ' AND Longitude = ' ' AND Lat_Lon = Latitude AND Longitude = PATROL_BORO AND STATION_NAME = ' ' THEN NULL
				WHEN Latitude = ' ' AND Longitude = ' ' AND Lat_Lon = Latitude AND Longitude = PATROL_BORO AND ISNUMERIC(STATION_NAME) = 1 AND LEN(STATION_NAME) > 5 THEN STATION_NAME
				WHEN Latitude = ' ' AND Longitude = ' ' AND Lat_Lon = Latitude AND Longitude = PATROL_BORO AND ISNUMERIC(STATION_NAME) = 0 THEN NULL
				WHEN Latitude = ' ' AND Longitude = ' ' AND Lat_Lon = Longitude AND ISNUMERIC(PATROL_BORO) = 1 AND LEN(PATROL_BORO) > 5 THEN PATROL_BORO
				WHEN Latitude = ' ' AND Longitude = ' ' AND Lat_Lon = Longitude AND ISNUMERIC(PATROL_BORO) = 0 THEN NULL
				WHEN Latitude = ' ' AND Longitude = ' ' AND Lat_Lon = TRANSIT_DISTRICT AND ISNUMERIC(PATROL_BORO) = 1 AND LEN(PATROL_BORO) > 5 THEN PATROL_BORO
				WHEN Latitude = ' ' AND Longitude = Latitude AND ISNUMERIC(Lat_Lon) = 1 AND LEN(Lat_Lon) > 5 THEN Lat_Lon
				WHEN Latitude = ' ' AND Longitude = Latitude AND ISNUMERIC(Lat_Lon) = 1 AND LEN(Lat_Lon) <= 3 THEN PATROL_BORO
				WHEN Latitude = ' ' AND Longitude = TRANSIT_DISTRICT AND ISNUMERIC(Lat_Lon) = 1 AND LEN(Lat_Lon) > 5 THEN Lat_Lon
				WHEN Latitude = ' ' AND Longitude = TRANSIT_DISTRICT AND Lat_Lon = ' ' THEN NULL
				WHEN Latitude = ' ' AND ISNUMERIC(Longitude) = 1 AND LEN(Longitude) > 5 THEN Longitude
				WHEN Latitude = SUSP_AGE_GROUP AND STATION_NAME = ' ' THEN NULL
				WHEN Latitude = SUSP_AGE_GROUP AND ISNUMERIC(STATION_NAME) = 1 AND LEN(STATION_NAME) > 5 THEN STATION_NAME
				WHEN Latitude = TRANSIT_DISTRICT AND ISNUMERIC(Longitude) = 1 AND LEN(Longitude) > 5 THEN Longitude
				WHEN Latitude = TRANSIT_DISTRICT AND Longitude = ' ' THEN NULL
				WHEN Latitude = SUSP_RACE AND ISNUMERIC(PATROL_BORO) = 1 AND LEN(PATROL_BORO) > 5 THEN PATROL_BORO
				WHEN Latitude = SUSP_RACE AND PATROL_BORO = ' ' THEN NULL
				WHEN Latitude = SUSP_SEX AND ISNUMERIC(Lat_Lon) = 1 AND LEN(Lat_Lon) > 5 THEN Lat_Lon
				WHEN Latitude = SUSP_SEX AND Lat_Lon = ' ' THEN NULL
				WHEN Latitude = 'UNKNOWN' AND Longitude = ' ' AND Longitude = Lat_Lon AND PATROL_BORO = ' ' THEN NULL
				WHEN Latitude = 'UNKNOWN' AND Longitude = ' ' AND Longitude = Lat_Lon AND ISNUMERIC(PATROL_BORO) = 1 AND LEN(PATROL_BORO) > 5 THEN PATROL_BORO
				WHEN Latitude = 'UNKNOWN' AND Longitude = ' ' AND TRANSIT_DISTRICT = Lat_Lon AND ISNUMERIC(PATROL_BORO) = 1 AND LEN(PATROL_BORO) > 5 THEN PATROL_BORO
				WHEN Latitude = 'UNKNOWN' AND Longitude = SUSP_RACE AND ISNUMERIC(STATION_NAME) = 1 AND LEN(STATION_NAME) > 5 THEN STATION_NAME
				WHEN Latitude = 'UNKNOWN' AND Longitude = SUSP_SEX AND ISNUMERIC(PATROL_BORO) = 1 AND LEN(PATROL_BORO) > 5 THEN PATROL_BORO
				WHEN Latitude = 'UNKNOWN' AND Longitude = SUSP_SEX AND PATROL_BORO = ' ' THEN NULL
				WHEN Latitude = 'UNKNOWN' AND Longitude = Latitude AND ISNUMERIC(STATION_NAME) = 1 AND LEN(STATION_NAME) > 5 THEN STATION_NAME
				ELSE Latitude END;

--- Longitude has some attributes exceeding the pattern of DECIMAL(11,8). Rectifying:

SELECT
	Longitude,
	ROUND(Longitude, 11) CORRECTED
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	LEN(Longitude) > 11;

--- Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	Longitude = ROUND(Longitude, 11)
WHERE
	LEN(Longitude) > 11;

--- I will use DISTINCT to draw out any possible values for the CASE statement for Longitude

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

SELECT
	DISTINCT(SUBSTRING(Longitude, 1, 5)) AS Longitude,
	SUBSTRING(Lat_Lon, 1, 5)AS Lat_Lon,
	SUBSTRING(PATROL_BORO, 1, 5)AS PATROL_BORO,
	SUBSTRING(STATION_NAME, 1, 5)AS STATION_NAME,
	SUBSTRING(VIC_AGE_GROUP, 1, 5) AS VIC_AGE_GROUP
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
ORDER BY 
	Longitude,
	Lat_Lon,
	PATROL_BORO,
	STATION_NAME,
	VIC_AGE_GROUP;

SELECT
	DISTINCT(
	LEFT(
	CASE
	WHEN Latitude IS NULL THEN NULL
	WHEN Latitude = STATION_NAME THEN VIC_AGE_GROUP
	WHEN Latitude = PATROL_BORO THEN STATION_NAME
	WHEN Latitude = Lat_Lon THEN PATROL_BORO
	WHEN Latitude = Lat_Lon THEN PATROL_BORO
	WHEN Latitude = Longitude THEN Lat_Lon
	ELSE Longitude END, 5) ) CORRECT

FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

---Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	Longitude = 
				CASE
				WHEN Latitude IS NULL THEN NULL
				WHEN Latitude = STATION_NAME THEN VIC_AGE_GROUP
				WHEN Latitude = PATROL_BORO THEN STATION_NAME
				WHEN Latitude = Lat_Lon THEN PATROL_BORO
				WHEN Latitude = Lat_Lon THEN PATROL_BORO
				WHEN Latitude = Longitude THEN Lat_Lon
				ELSE Longitude END;

--- The attributes of Lat_Lon are simply a product of CONCAT statement of Latitude and Longitude as they are in Decimal Degrees. Hence:

SELECT
	CONCAT(Latitude, ', ', Longitude) Lat_Lon_TEST
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

--- Addressing using a CASE statement:

SELECT
	CASE
	WHEN Latitude IS NULL AND Longitude IS NULL THEN NULL
	WHEN ISNUMERIC(Latitude) = 1 AND LEN(Latitude) > 5 AND ISNUMERIC(Longitude) = 1 AND LEN(Longitude) > 5 THEN CONCAT(Latitude, ', ', Longitude)
	ELSE Lat_Lon END AS CORRECT

FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

---Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	Lat_Lon = 
				CASE
				WHEN Latitude IS NULL AND Longitude IS NULL THEN NULL
				WHEN ISNUMERIC(Latitude) = 1 AND LEN(Latitude) > 5 AND ISNUMERIC(Longitude) = 1 AND LEN(Longitude) > 5 THEN CONCAT('"', Latitude, ', ', Longitude, '"')
				ELSE Lat_Lon END;

--- I will use DISTINCT to draw out any possible values for the CASE statement for PATROL_BORO

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

SELECT
	DISTINCT(PATROL_BORO),
	STATION_NAME,
	VIC_AGE_GROUP,
	VIC_RACE,
	VIC_SEX
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
ORDER BY 
	PATROL_BORO,
	STATION_NAME,
	VIC_AGE_GROUP,
	VIC_RACE,
	VIC_SEX;

SELECT
	DISTINCT(
	CASE
	WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND PATROL_BORO = VIC_AGE_GROUP AND STATION_NAME = VIC_RACE THEN NULL
	WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND PATROL_BORO = VIC_AGE_GROUP AND 
	(LEN(VIC_RACE) <= 5 AND ((VIC_RACE LIKE '%-%' AND VIC_RACE NOT LIKE '-%') OR VIC_RACE LIKE '%<%' OR VIC_RACE LIKE '%+%'))THEN NULL
	WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND PATROL_BORO = VIC_AGE_GROUP AND VIC_RACE LIKE 'PATROL%' THEN VIC_RACE
	WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND PATROL_BORO = VIC_AGE_GROUP AND VIC_RACE NOT LIKE 'PATROL%' THEN NULL
	WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND VIC_AGE_GROUP LIKE 'PATROL%' THEN VIC_AGE_GROUP
	WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND (LEN(VIC_AGE_GROUP) <= 5 AND 
	((VIC_AGE_GROUP LIKE '%-%' AND VIC_AGE_GROUP NOT LIKE '-%') OR VIC_AGE_GROUP LIKE '%<%' OR VIC_AGE_GROUP LIKE '%+%'))THEN NULL
	WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND VIC_AGE_GROUP NOT LIKE 'PATROL%' THEN NULL
	WHEN PATROL_BORO = ' ' AND STATION_NAME LIKE 'PATROL%' THEN STATION_NAME
	WHEN PATROL_BORO LIKE '%)"' AND STATION_NAME LIKE 'PATROL%' THEN STATION_NAME
	WHEN PATROL_BORO LIKE '%)"' AND STATION_NAME NOT LIKE 'PATROL%' THEN NULL
	WHEN PATROL_BORO = Longitude AND STATION_NAME = ' ' AND STATION_NAME =  VIC_AGE_GROUP THEN NULL
	WHEN PATROL_BORO LIKE '"(%' AND VIC_AGE_GROUP LIKE 'PATROL%' THEN VIC_AGE_GROUP
	WHEN PATROL_BORO LIKE '"(%' AND VIC_AGE_GROUP NOT LIKE 'PATROL%' THEN NULL
	WHEN PATROL_BORO = Latitude THEN SUBSTRING(VIC_SEX, 0, CHARINDEX(',', VIC_SEX, 0))
	WHEN PATROL_BORO = Longitude THEN VIC_RACE
	WHEN VIC_SEX LIKE '%)"%' THEN REPLACE(SUBSTRING(VIC_SEX, CHARINDEX('P', VIC_SEX, 0), (CHARINDEX(',', VIC_SEX, 20) - CHARINDEX(',', VIC_SEX, 0))), ',', '')
	ELSE PATROL_BORO END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

---Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	PATROL_BORO = 
					CASE
					WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND PATROL_BORO = VIC_AGE_GROUP AND STATION_NAME = VIC_RACE THEN NULL
					WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND PATROL_BORO = VIC_AGE_GROUP AND 
					(LEN(VIC_RACE) <= 5 AND ((VIC_RACE LIKE '%-%' AND VIC_RACE NOT LIKE '-%') OR VIC_RACE LIKE '%<%' OR VIC_RACE LIKE '%+%'))THEN NULL
					WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND PATROL_BORO = VIC_AGE_GROUP AND VIC_RACE LIKE 'PATROL%' THEN VIC_RACE
					WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND PATROL_BORO = VIC_AGE_GROUP AND VIC_RACE NOT LIKE 'PATROL%' THEN NULL
					WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND VIC_AGE_GROUP LIKE 'PATROL%' THEN VIC_AGE_GROUP
					WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND (LEN(VIC_AGE_GROUP) <= 5 AND 
					((VIC_AGE_GROUP LIKE '%-%' AND VIC_AGE_GROUP NOT LIKE '-%') OR VIC_AGE_GROUP LIKE '%<%' OR VIC_AGE_GROUP LIKE '%+%'))THEN NULL
					WHEN PATROL_BORO = ' ' AND STATION_NAME = ' ' AND VIC_AGE_GROUP NOT LIKE 'PATROL%' THEN NULL
					WHEN PATROL_BORO = ' ' AND STATION_NAME LIKE 'PATROL%' THEN STATION_NAME
					WHEN PATROL_BORO LIKE '%)"' AND STATION_NAME LIKE 'PATROL%' THEN STATION_NAME
					WHEN PATROL_BORO LIKE '%)"' AND STATION_NAME NOT LIKE 'PATROL%' THEN NULL
					WHEN PATROL_BORO = Longitude AND STATION_NAME = ' ' AND STATION_NAME =  VIC_AGE_GROUP THEN NULL
					WHEN PATROL_BORO LIKE '"(%' AND VIC_AGE_GROUP LIKE 'PATROL%' THEN VIC_AGE_GROUP
					WHEN PATROL_BORO LIKE '"(%' AND VIC_AGE_GROUP NOT LIKE 'PATROL%' THEN NULL
					WHEN PATROL_BORO = Latitude THEN SUBSTRING(VIC_SEX, 0, CHARINDEX(',', VIC_SEX, 0))
					WHEN PATROL_BORO = Longitude THEN VIC_RACE
					WHEN VIC_SEX LIKE '%)"%' THEN REPLACE(SUBSTRING(VIC_SEX, CHARINDEX('P', VIC_SEX, 0), (CHARINDEX(',', VIC_SEX, 20) - CHARINDEX(',', VIC_SEX, 0))), ',', '')
					ELSE PATROL_BORO END;	

----Few empty cells were unadressed, Hence:
---Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	PATROL_BORO = NULL
WHERE
	PATROL_BORO = ' ';

--- I will use DISTINCT to draw out any possible values for the CASE statement for STATION_NAME

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	VIC_SEX LIKE '%)"%'


SELECT
	DISTINCT(STATION_NAME)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE
	STATION_NAME LIKE '%[A-Z]%'

SELECT
	DISTINCT(STATION_NAME),
	VIC_AGE_GROUP,
	VIC_RACE,
	VIC_SEX
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
ORDER BY 
	STATION_NAME,
	VIC_AGE_GROUP,
	VIC_RACE,
	VIC_SEX;

SELECT
	DISTINCT(
	CASE
	WHEN STATION_NAME = ' ' AND STATION_NAME = VIC_AGE_GROUP AND VIC_AGE_GROUP =  VIC_RACE THEN NULL
	WHEN STATION_NAME = ' ' AND STATION_NAME = VIC_AGE_GROUP AND 
	(LEN(VIC_RACE) <= 5 AND ((VIC_RACE LIKE '%-%' AND VIC_RACE NOT LIKE '-%') OR VIC_RACE LIKE '%<%' OR VIC_RACE LIKE '%+%'))THEN NULL
	WHEN STATION_NAME = ' ' AND STATION_NAME = VIC_AGE_GROUP AND VIC_RACE LIKE '%[A-Z]%' AND VIC_RACE NOT LIKE 'PATROL%' THEN NULL
	WHEN STATION_NAME = ' ' AND STATION_NAME = VIC_AGE_GROUP AND VIC_RACE = PATROL_BORO THEN NULL
	WHEN STATION_NAME = ' ' AND (LEN(VIC_AGE_GROUP) <= 5 AND ((VIC_AGE_GROUP LIKE '%-%' AND VIC_AGE_GROUP NOT LIKE '-%') OR VIC_AGE_GROUP LIKE '%<%' OR VIC_AGE_GROUP LIKE '%+%')) THEN NULL
	WHEN STATION_NAME = ' ' AND VIC_AGE_GROUP = PATROL_BORO AND VIC_RACE = ' ' THEN NULL
	WHEN STATION_NAME = ' ' AND VIC_AGE_GROUP = PATROL_BORO AND VIC_RACE != ' ' THEN VIC_RACE
	WHEN STATION_NAME = ' ' AND VIC_AGE_GROUP = 'UNKNOWN' AND VIC_RACE != ' ' THEN NULL
	WHEN STATION_NAME LIKE '%)"' AND VIC_RACE = ' ' THEN NULL
	WHEN STATION_NAME LIKE '%)"' AND VIC_RACE != ' ' THEN VIC_RACE
	WHEN STATION_NAME LIKE '"(%' AND VIC_SEX NOT LIKE ',%' THEN SUBSTRING(VIC_SEX, 0, CHARINDEX(',', VIC_SEX, 0))
	WHEN STATION_NAME LIKE '"(%' AND VIC_SEX LIKE ',%' THEN NULL
	WHEN STATION_NAME = Latitude AND SUBSTRING(VIC_SEX, CHARINDEX(',', VIC_SEX, 30), 2) = ',,' THEN NULL
	WHEN STATION_NAME = Longitude AND SUBSTRING(VIC_SEX, CHARINDEX(',', VIC_SEX, 16), 2) = ',,' THEN NULL
	WHEN STATION_NAME = Longitude AND SUBSTRING(VIC_SEX, CHARINDEX(',', VIC_SEX, 16), 2) != ',,'  AND CHARINDEX(',', VIC_SEX, 0) = 1 THEN NULL
	WHEN STATION_NAME = Longitude AND SUBSTRING(VIC_SEX, CHARINDEX(',', VIC_SEX, 16), 2) != ',,' AND CHARINDEX(',', VIC_SEX, 0) != 1 THEN 
	REPLACE(SUBSTRING(VIC_SEX, CHARINDEX(',', VIC_SEX, 18), (CHARINDEX(',', VIC_SEX, 26) - CHARINDEX(',', VIC_SEX, 0))), ',', '')
	WHEN STATION_NAME = PATROL_BORO AND VIC_AGE_GROUP = ' ' THEN NULL
	WHEN STATION_NAME = PATROL_BORO AND VIC_AGE_GROUP != ' ' THEN VIC_AGE_GROUP
	ELSE STATION_NAME END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

---Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	STATION_NAME = 	
					CASE
					WHEN STATION_NAME = ' ' AND STATION_NAME = VIC_AGE_GROUP AND VIC_AGE_GROUP =  VIC_RACE THEN NULL
					WHEN STATION_NAME = ' ' AND STATION_NAME = VIC_AGE_GROUP AND 
					(LEN(VIC_RACE) <= 5 AND ((VIC_RACE LIKE '%-%' AND VIC_RACE NOT LIKE '-%') OR VIC_RACE LIKE '%<%' OR VIC_RACE LIKE '%+%'))THEN NULL
					WHEN STATION_NAME = ' ' AND STATION_NAME = VIC_AGE_GROUP AND VIC_RACE LIKE '%[A-Z]%' AND VIC_RACE NOT LIKE 'PATROL%' THEN NULL
					WHEN STATION_NAME = ' ' AND STATION_NAME = VIC_AGE_GROUP AND VIC_RACE = PATROL_BORO THEN NULL
					WHEN STATION_NAME = ' ' AND (LEN(VIC_AGE_GROUP) <= 5 AND ((VIC_AGE_GROUP LIKE '%-%' AND VIC_AGE_GROUP NOT LIKE '-%') OR VIC_AGE_GROUP LIKE '%<%' OR VIC_AGE_GROUP LIKE '%+%')) THEN NULL
					WHEN STATION_NAME = ' ' AND VIC_AGE_GROUP = PATROL_BORO AND VIC_RACE = ' ' THEN NULL
					WHEN STATION_NAME = ' ' AND VIC_AGE_GROUP = PATROL_BORO AND VIC_RACE != ' ' THEN VIC_RACE
					WHEN STATION_NAME = ' ' AND VIC_AGE_GROUP = 'UNKNOWN' AND VIC_RACE != ' ' THEN NULL
					WHEN STATION_NAME LIKE '%)"' AND VIC_RACE = ' ' THEN NULL
					WHEN STATION_NAME LIKE '%)"' AND VIC_RACE != ' ' THEN VIC_RACE
					WHEN STATION_NAME LIKE '"(%' AND VIC_SEX NOT LIKE ',%' THEN SUBSTRING(VIC_SEX, 0, CHARINDEX(',', VIC_SEX, 0))
					WHEN STATION_NAME LIKE '"(%' AND VIC_SEX LIKE ',%' THEN NULL
					WHEN STATION_NAME = Latitude AND SUBSTRING(VIC_SEX, CHARINDEX(',', VIC_SEX, 30), 2) = ',,' THEN NULL
					WHEN STATION_NAME = Longitude AND SUBSTRING(VIC_SEX, CHARINDEX(',', VIC_SEX, 16), 2) = ',,' THEN NULL
					WHEN STATION_NAME = Longitude AND SUBSTRING(VIC_SEX, CHARINDEX(',', VIC_SEX, 16), 2) != ',,'  AND CHARINDEX(',', VIC_SEX, 0) = 1 THEN NULL
					WHEN STATION_NAME = Longitude AND SUBSTRING(VIC_SEX, CHARINDEX(',', VIC_SEX, 16), 2) != ',,' AND CHARINDEX(',', VIC_SEX, 0) != 1 THEN 
					REPLACE(SUBSTRING(VIC_SEX, CHARINDEX(',', VIC_SEX, 18), (CHARINDEX(',', VIC_SEX, 26) - CHARINDEX(',', VIC_SEX, 0))), ',', '')
					WHEN STATION_NAME = PATROL_BORO AND VIC_AGE_GROUP = ' ' THEN NULL
					WHEN STATION_NAME = PATROL_BORO AND VIC_AGE_GROUP != ' ' THEN VIC_AGE_GROUP
					ELSE STATION_NAME END;

--- I will use DISTINCT to draw out any possible values for the CASE statement for VIC_AGE_GROUP

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic

SELECT
	DISTINCT(VIC_AGE_GROUP),
	VIC_RACE,
	VIC_SEX
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
ORDER BY 
	VIC_AGE_GROUP,
	VIC_RACE,
	VIC_SEX;

SELECT
	DISTINCT(
	CASE
	WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = ' ' AND VIC_SEX = VIC_RACE THEN NULL
	WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = ' ' AND VIC_SEX LIKE ',%' THEN NULL
	WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = ' ' AND VIC_SEX LIKE '[0-9]%' OR VIC_SEX LIKE '<%' THEN REPLACE(SUBSTRING(VIC_SEX, 0, CHARINDEX(',', VIC_SEX, 0)), ',', '')
	WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = ' ' AND VIC_SEX LIKE '[A-Z]%' THEN NULL
	WHEN VIC_AGE_GROUP = ' ' AND (LEN(VIC_RACE) <= 5 AND ((VIC_RACE LIKE '%-%' AND VIC_RACE NOT LIKE '-%') OR VIC_RACE LIKE '%<%' OR VIC_RACE LIKE '%+%')) THEN VIC_RACE
	WHEN VIC_AGE_GROUP = ' ' AND (ISNUMERIC(VIC_RACE) = 1 AND ((VIC_RACE LIKE '-%') OR VIC_RACE NOT LIKE '%<%' OR VIC_RACE NOT LIKE '%+%')) THEN NULL
	WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = PATROL_BORO AND VIC_SEX LIKE ',%' THEN REPLACE(SUBSTRING(VIC_SEX, 0, CHARINDEX(',', VIC_SEX, 3)), ',', '')
	WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = PATROL_BORO AND VIC_SEX LIKE ',,%' THEN NULL
	WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = 'UNKNOWN' THEN NULL
	WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE LIKE '%[A-Z]%' THEN NULL
	WHEN VIC_AGE_GROUP LIKE '%)"' AND VIC_SEX LIKE ',%' THEN REPLACE(SUBSTRING(VIC_SEX, 0, CHARINDEX(',', VIC_SEX, 2)), ',', '')
	WHEN VIC_AGE_GROUP LIKE '%)"' AND VIC_SEX LIKE ',,%' THEN NULL
	WHEN VIC_AGE_GROUP LIKE '"(%' AND VIC_SEX LIKE ',,,%' THEN NULL
	WHEN VIC_AGE_GROUP LIKE '"(%' AND VIC_SEX LIKE ',,%' AND 
	REPLACE(SUBSTRING(VIC_SEX, CHARINDEX(',,', VIC_SEX, 0), CHARINDEX(',', VIC_SEX, 3)), ',', '') != ' ' THEN REPLACE(SUBSTRING(VIC_SEX, CHARINDEX(',,', VIC_SEX, 0), CHARINDEX(',', VIC_SEX, 3)), ',', '')
	WHEN VIC_AGE_GROUP LIKE '"(%' AND VIC_SEX LIKE ',,%' AND 
	REPLACE(SUBSTRING(VIC_SEX, CHARINDEX(',,', VIC_SEX, 0), CHARINDEX(',', VIC_SEX, 3)), ',', '') = ' ' THEN NULL
	WHEN VIC_AGE_GROUP LIKE '"(%' AND VIC_SEX LIKE 'PATROL%' AND VIC_SEX LIKE '%,,%' THEN 
	REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',,', VIC_SEX) + 2), (CHARINDEX(',', VIC_SEX))), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',,', VIC_SEX) + 2), (CHARINDEX(',', VIC_SEX)))))), ',', '')
	WHEN VIC_AGE_GROUP LIKE '"(%' AND VIC_SEX LIKE 'PATROL%' AND VIC_SEX NOT LIKE '%,,%' THEN
	REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 26) + 1), CHARINDEX(',', VIC_SEX, 27)), (CHARINDEX(',', SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 26) + 1), CHARINDEX(',', VIC_SEX, 27))))), ',', '')
	WHEN VIC_AGE_GROUP = Longitude AND VIC_SEX LIKE '%,,%' THEN 
	REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 18) + 2), CHARINDEX(',', VIC_SEX, 18)), CHARINDEX(',', SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 18) + 2), CHARINDEX(',', VIC_SEX, 18)))), ',', '')
	WHEN VIC_AGE_GROUP = STATION_NAME AND (LEN(VIC_RACE) <= 5 AND ((VIC_RACE LIKE '%-%' AND VIC_RACE NOT LIKE '-%') OR VIC_RACE LIKE '%<%' OR VIC_RACE LIKE '%+%')) THEN VIC_RACE
	WHEN VIC_AGE_GROUP = STATION_NAME AND (ISNUMERIC(VIC_RACE) = 1 AND ((VIC_RACE LIKE '-%') OR VIC_RACE NOT LIKE '%<%' OR VIC_RACE NOT LIKE '%+%')) THEN NULL
	WHEN VIC_AGE_GROUP = STATION_NAME AND VIC_RACE = 'UNKNOWN' THEN NULL
	WHEN VIC_AGE_GROUP = STATION_NAME AND VIC_RACE = ' ' THEN NULL
	WHEN VIC_AGE_GROUP = PATROL_BORO AND VIC_SEX LIKE ',%' THEN NULL
	WHEN VIC_AGE_GROUP = PATROL_BORO AND VIC_SEX LIKE ',,%' THEN NULL
	WHEN VIC_AGE_GROUP = PATROL_BORO AND VIC_SEX NOT LIKE ',%' THEN REPLACE(SUBSTRING(VIC_SEX, 0, CHARINDEX(',', VIC_SEX, 0)), ',', '')
	ELSE VIC_AGE_GROUP END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

---Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	VIC_AGE_GROUP =
					CASE
					WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = ' ' AND VIC_SEX = VIC_RACE THEN NULL
					WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = ' ' AND VIC_SEX LIKE ',%' THEN NULL
					WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = ' ' AND VIC_SEX LIKE '[0-9]%' OR VIC_SEX LIKE '<%' THEN REPLACE(SUBSTRING(VIC_SEX, 0, CHARINDEX(',', VIC_SEX, 0)), ',', '')
					WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = ' ' AND VIC_SEX LIKE '[A-Z]%' THEN NULL
					WHEN VIC_AGE_GROUP = ' ' AND (LEN(VIC_RACE) <= 5 AND ((VIC_RACE LIKE '%-%' AND VIC_RACE NOT LIKE '-%') OR VIC_RACE LIKE '%<%' OR VIC_RACE LIKE '%+%')) THEN VIC_RACE
					WHEN VIC_AGE_GROUP = ' ' AND (ISNUMERIC(VIC_RACE) = 1 AND ((VIC_RACE LIKE '-%') OR VIC_RACE NOT LIKE '%<%' OR VIC_RACE NOT LIKE '%+%')) THEN NULL
					WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = PATROL_BORO AND VIC_SEX LIKE ',%' THEN REPLACE(SUBSTRING(VIC_SEX, 0, CHARINDEX(',', VIC_SEX, 3)), ',', '')
					WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = PATROL_BORO AND VIC_SEX LIKE ',,%' THEN NULL
					WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE = 'UNKNOWN' THEN NULL
					WHEN VIC_AGE_GROUP = ' ' AND VIC_RACE LIKE '%[A-Z]%' THEN NULL
					WHEN VIC_AGE_GROUP LIKE '%)"' AND VIC_SEX LIKE ',%' THEN REPLACE(SUBSTRING(VIC_SEX, 0, CHARINDEX(',', VIC_SEX, 2)), ',', '')
					WHEN VIC_AGE_GROUP LIKE '%)"' AND VIC_SEX LIKE ',,%' THEN NULL
					WHEN VIC_AGE_GROUP LIKE '"(%' AND VIC_SEX LIKE ',,,%' THEN NULL
					WHEN VIC_AGE_GROUP LIKE '"(%' AND VIC_SEX LIKE ',,%' AND 
					REPLACE(SUBSTRING(VIC_SEX, CHARINDEX(',,', VIC_SEX, 0), CHARINDEX(',', VIC_SEX, 3)), ',', '') != ' ' THEN REPLACE(SUBSTRING(VIC_SEX, CHARINDEX(',,', VIC_SEX, 0), CHARINDEX(',', VIC_SEX, 3)), ',', '')
					WHEN VIC_AGE_GROUP LIKE '"(%' AND VIC_SEX LIKE ',,%' AND 
					REPLACE(SUBSTRING(VIC_SEX, CHARINDEX(',,', VIC_SEX, 0), CHARINDEX(',', VIC_SEX, 3)), ',', '') = ' ' THEN NULL
					WHEN VIC_AGE_GROUP LIKE '"(%' AND VIC_SEX LIKE 'PATROL%' AND VIC_SEX LIKE '%,,%' THEN 
					REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',,', VIC_SEX) + 2), (CHARINDEX(',', VIC_SEX))), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',,', VIC_SEX) + 2), (CHARINDEX(',', VIC_SEX)))))), ',', '')
					WHEN VIC_AGE_GROUP LIKE '"(%' AND VIC_SEX LIKE 'PATROL%' AND VIC_SEX NOT LIKE '%,,%' THEN
					REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 26) + 1), CHARINDEX(',', VIC_SEX, 27)), (CHARINDEX(',', SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 26) + 1), CHARINDEX(',', VIC_SEX, 27))))), ',', '')
					WHEN VIC_AGE_GROUP = Longitude AND VIC_SEX LIKE '%,,%' THEN 
					REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 18) + 2), CHARINDEX(',', VIC_SEX, 18)), CHARINDEX(',', SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 18) + 2), CHARINDEX(',', VIC_SEX, 18)))), ',', '')
					WHEN VIC_AGE_GROUP LIKE '%)"' AND VIC_RACE LIKE 'PATROL%' THEN 
					REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), CHARINDEX(',', VIC_SEX, 0)), CHARINDEX(',', SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), CHARINDEX(',', VIC_SEX, 0)))), ',', '')
					WHEN VIC_AGE_GROUP = STATION_NAME AND (LEN(VIC_RACE) <= 5 AND ((VIC_RACE LIKE '%-%' AND VIC_RACE NOT LIKE '-%') OR VIC_RACE LIKE '%<%' OR VIC_RACE LIKE '%+%')) THEN VIC_RACE
					WHEN VIC_AGE_GROUP = STATION_NAME AND (ISNUMERIC(VIC_RACE) = 1 AND ((VIC_RACE LIKE '-%') OR VIC_RACE NOT LIKE '%<%' OR VIC_RACE NOT LIKE '%+%')) THEN NULL
					WHEN VIC_AGE_GROUP = STATION_NAME AND VIC_RACE = 'UNKNOWN' THEN NULL
					WHEN VIC_AGE_GROUP = STATION_NAME AND VIC_RACE = ' ' THEN NULL
					WHEN VIC_AGE_GROUP = PATROL_BORO AND VIC_SEX LIKE ',%' THEN NULL
					WHEN VIC_AGE_GROUP = PATROL_BORO AND VIC_SEX LIKE ',,%' THEN NULL
					WHEN VIC_AGE_GROUP = PATROL_BORO AND VIC_SEX NOT LIKE ',%' THEN REPLACE(SUBSTRING(VIC_SEX, 0, CHARINDEX(',', VIC_SEX, 0)), ',', '')
					ELSE VIC_AGE_GROUP END;

SELECT
	DISTINCT(VIC_AGE_GROUP)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
WHERE NOT
	((VIC_AGE_GROUP LIKE '%-%' AND VIC_AGE_GROUP NOT LIKE '-%') OR VIC_AGE_GROUP LIKE '%<%' OR VIC_AGE_GROUP LIKE '%+%')

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	VIC_AGE_GROUP = NULL
WHERE NOT
	((VIC_AGE_GROUP LIKE '%-%' AND VIC_AGE_GROUP NOT LIKE '-%') OR VIC_AGE_GROUP LIKE '%<%' OR VIC_AGE_GROUP LIKE '%+%')

--- I will use DISTINCT to draw out any possible values for the CASE statement for VIC_RACE

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic

SELECT
	DISTINCT(VIC_RACE),
	VIC_SEX
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
ORDER BY 
	VIC_RACE,
	VIC_SEX;

SELECT
	DISTINCT(
	CASE
	WHEN VIC_RACE = ' ' AND (VIC_SEX = ',' OR VIC_SEX = ',,') THEN NULL
	WHEN VIC_RACE = ' ' AND VIC_SEX LIKE ',,%' THEN NULL
	WHEN VIC_RACE = ' ' AND VIC_SEX LIKE ',%' AND REPLACE(VIC_SEX, ',', '') LIKE '[0-9]%' THEN 
	REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), 30)))), ',', '')
	WHEN VIC_RACE = ' ' AND VIC_SEX LIKE ',%' AND REPLACE(VIC_SEX, ',', '') LIKE '[A-Z]%' THEN 
	REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30)))), ',', '')
	WHEN VIC_RACE = ' ' AND VIC_SEX NOT LIKE ',%' AND REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '') = VIC_AGE_GROUP THEN
	REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30)))), ',', '')
	WHEN VIC_RACE = ' ' AND VIC_SEX NOT LIKE ',%' AND ISNUMERIC(REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')) = 1 AND VIC_AGE_GROUP IS NULL THEN 
	REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30)))), ',', '')
	WHEN VIC_RACE = ' ' AND VIC_SEX NOT LIKE ',%' AND ISNUMERIC(REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')) = 0 AND (LEN(VIC_SEX) - LEN(REPLACE(VIC_SEX, ',', ''))) = 1 THEN
	REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')
	WHEN VIC_RACE = ' ' AND VIC_SEX NOT LIKE ',%' AND ISNUMERIC(REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')) = 0 AND (LEN(VIC_SEX) - LEN(REPLACE(VIC_SEX, ',', ''))) = 2 THEN
	REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30)))), ',', '')
	WHEN VIC_RACE LIKE '%)"' AND VIC_SEX LIKE 'PATROL%' THEN
	REPLACE(LEFT((RIGHT(VIC_SEX, CHARINDEX(',', REVERSE(VIC_SEX), 3))), CHARINDEX(',', (RIGHT(VIC_SEX, CHARINDEX(',', REVERSE(VIC_SEX), 3))), 3)), ',', '')
	WHEN VIC_RACE LIKE '%)"' AND VIC_SEX NOT LIKE 'PATROL%' THEN 
	REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 3) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 3) + 1), 30)))), ',', '')
	WHEN VIC_RACE LIKE '"(%' THEN
	REPLACE(LEFT((RIGHT(VIC_SEX, CHARINDEX(',', REVERSE(VIC_SEX), 3))), CHARINDEX(',', (RIGHT(VIC_SEX, CHARINDEX(',', REVERSE(VIC_SEX), 3))), 3)), ',', '')
	WHEN VIC_RACE = STATION_NAME THEN REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30)))), ',', '')
	WHEN VIC_RACE = VIC_AGE_GROUP THEN REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')
	WHEN (ISNUMERIC(VIC_RACE) = 1 AND ((VIC_RACE LIKE '-%') OR VIC_RACE NOT LIKE '%<%' OR VIC_RACE NOT LIKE '%+%')) THEN REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')
	WHEN VIC_RACE = PATROL_BORO AND VIC_SEX LIKE ',,%' THEN 
	REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), 30)))), ',', '')
	WHEN VIC_RACE = PATROL_BORO AND VIC_SEX LIKE ',%' THEN
	REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), 30)))), ',', '')
	WHEN VIC_RACE = PATROL_BORO AND (VIC_SEX NOT LIKE ',,%' AND VIC_SEX NOT LIKE ',%') THEN
	REPLACE(LEFT((RIGHT(VIC_SEX, CHARINDEX(',', REVERSE(VIC_SEX), 3))), CHARINDEX(',', (RIGHT(VIC_SEX, CHARINDEX(',', REVERSE(VIC_SEX), 3))), 3)), ',', '')
	WHEN VIC_RACE = 'UNKNOWN' AND (LEN(VIC_SEX) - LEN(REPLACE(VIC_SEX, ',', ''))) = 1 THEN REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')
	ELSE VIC_RACE END) AS CORRECT
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

---Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	VIC_RACE = 
				CASE
				WHEN VIC_RACE = ' ' AND (VIC_SEX = ',' OR VIC_SEX = ',,') THEN NULL
				WHEN VIC_RACE = ' ' AND VIC_SEX LIKE ',,%' THEN NULL
				WHEN VIC_RACE = ' ' AND VIC_SEX LIKE ',%' AND REPLACE(VIC_SEX, ',', '') LIKE '[0-9]%' THEN 
				REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), 30)))), ',', '')
				WHEN VIC_RACE = ' ' AND VIC_SEX LIKE ',%' AND REPLACE(VIC_SEX, ',', '') LIKE '[A-Z]%' THEN 
				REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30)))), ',', '')
				WHEN VIC_RACE = ' ' AND VIC_SEX NOT LIKE ',%' AND REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '') = VIC_AGE_GROUP THEN
				REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30)))), ',', '')
				WHEN VIC_RACE = ' ' AND VIC_SEX NOT LIKE ',%' AND ISNUMERIC(REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')) = 1 AND VIC_AGE_GROUP IS NULL THEN 
				REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30)))), ',', '')
				WHEN VIC_RACE = ' ' AND VIC_SEX NOT LIKE ',%' AND ISNUMERIC(REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')) = 0 AND (LEN(VIC_SEX) - LEN(REPLACE(VIC_SEX, ',', ''))) = 1 THEN
				REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')
				WHEN VIC_RACE = ' ' AND VIC_SEX NOT LIKE ',%' AND ISNUMERIC(REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')) = 0 AND (LEN(VIC_SEX) - LEN(REPLACE(VIC_SEX, ',', ''))) = 2 THEN
				REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30)))), ',', '')
				WHEN VIC_RACE LIKE '%)"' AND VIC_SEX LIKE 'PATROL%' THEN
				REPLACE(LEFT((RIGHT(VIC_SEX, CHARINDEX(',', REVERSE(VIC_SEX), 3))), CHARINDEX(',', (RIGHT(VIC_SEX, CHARINDEX(',', REVERSE(VIC_SEX), 3))), 3)), ',', '')
				WHEN VIC_RACE LIKE '%)"' AND VIC_SEX NOT LIKE 'PATROL%' THEN 
				REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 3) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 3) + 1), 30)))), ',', '')
				WHEN VIC_RACE LIKE '"(%' THEN
				REPLACE(LEFT((RIGHT(VIC_SEX, CHARINDEX(',', REVERSE(VIC_SEX), 3))), CHARINDEX(',', (RIGHT(VIC_SEX, CHARINDEX(',', REVERSE(VIC_SEX), 3))), 3)), ',', '')
				WHEN VIC_RACE = STATION_NAME THEN REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 0) + 1), 30)))), ',', '')
				WHEN VIC_RACE = VIC_AGE_GROUP THEN REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')
				WHEN (ISNUMERIC(VIC_RACE) = 1 AND ((VIC_RACE LIKE '-%') OR VIC_RACE NOT LIKE '%<%' OR VIC_RACE NOT LIKE '%+%')) THEN REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')
				WHEN VIC_RACE = PATROL_BORO AND VIC_SEX LIKE ',,%' THEN 
				REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), 30)))), ',', '')
				WHEN VIC_RACE = PATROL_BORO AND VIC_SEX LIKE ',%' THEN
				REPLACE(LEFT(SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), 30), CHARINDEX(',', (SUBSTRING(VIC_SEX, (CHARINDEX(',', VIC_SEX, 2) + 1), 30)))), ',', '')
				WHEN VIC_RACE = PATROL_BORO AND (VIC_SEX NOT LIKE ',,%' AND VIC_SEX NOT LIKE ',%') THEN
				REPLACE(LEFT((RIGHT(VIC_SEX, CHARINDEX(',', REVERSE(VIC_SEX), 3))), CHARINDEX(',', (RIGHT(VIC_SEX, CHARINDEX(',', REVERSE(VIC_SEX), 3))), 3)), ',', '')
				WHEN VIC_RACE = 'UNKNOWN' AND (LEN(VIC_SEX) - LEN(REPLACE(VIC_SEX, ',', ''))) = 1 THEN REPLACE(LEFT(VIC_SEX, CHARINDEX(',', VIC_SEX, 0)), ',', '')
				ELSE VIC_RACE END;

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	VIC_RACE = NULL
WHERE
	VIC_RACE = 'UNKNOWN' OR VIC_RACE = ' ';

--- I will use DISTINCT to draw out any possible values for the CASE statement for VIC_SEX

SELECT
	*
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic

SELECT
	VIC_SEX,
	SUBSTRING(REVERSE(VIC_SEX), 1, 1)
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic
ORDER BY
	VIC_SEX;

SELECT
	DISTINCT(
	SUBSTRING(REVERSE(VIC_SEX), 1, 1))
FROM
	PortfolioProject..NYPD_Complaint_Data_Historic;

---Updating:

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	VIC_SEX = SUBSTRING(REVERSE(VIC_SEX), 1, 1)

UPDATE
	PortfolioProject..NYPD_Complaint_Data_Historic
SET
	VIC_SEX = NULL
WHERE
	VIC_SEX = ',';